{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Absorbers = void 0;\n\nvar AbsorberInstance_1 = require(\"./AbsorberInstance\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Absorbers = function () {\n  function Absorbers(container) {\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n  }\n\n  Absorbers.prototype.init = function (options) {\n    var _a, _b;\n\n    if (!options) {\n      return;\n    }\n\n    if (options.absorbers) {\n      if (options.absorbers instanceof Array) {\n        this.absorbers = options.absorbers.map(function (s) {\n          var tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.absorbers instanceof Array) {\n          this.absorbers = new Absorber_1.Absorber();\n        }\n\n        this.absorbers.load(options.absorbers);\n      }\n    }\n\n    var interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        this.interactivityAbsorbers = interactivityAbsorbers.map(function (s) {\n          var tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityAbsorbers instanceof Array) {\n          this.interactivityAbsorbers = new Absorber_1.Absorber();\n        }\n\n        this.interactivityAbsorbers.load(interactivityAbsorbers);\n      }\n    }\n\n    if (this.absorbers instanceof Array) {\n      for (var _i = 0, _c = this.absorbers; _i < _c.length; _i++) {\n        var absorberOptions = _c[_i];\n        var absorber = new AbsorberInstance_1.AbsorberInstance(this, absorberOptions);\n        this.addAbsorber(absorber);\n      }\n    } else {\n      var absorberOptions = this.absorbers;\n      var absorber = new AbsorberInstance_1.AbsorberInstance(this, absorberOptions);\n      this.addAbsorber(absorber);\n    }\n  };\n\n  Absorbers.prototype.particleUpdate = function (particle, delta) {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var absorber = _a[_i];\n      absorber.attract(particle, delta);\n\n      if (particle.destroyed) {\n        break;\n      }\n    }\n  };\n\n  Absorbers.prototype.draw = function (context) {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var absorber = _a[_i];\n      context.save();\n      absorber.draw(context);\n      context.restore();\n    }\n  };\n\n  Absorbers.prototype.stop = function () {\n    this.array = [];\n  };\n\n  Absorbers.prototype.resize = function () {\n    for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n      var absorber = _a[_i];\n      absorber.resize();\n    }\n  };\n\n  Absorbers.prototype.handleClickMode = function (mode) {\n    var container = this.container;\n    var absorberOptions = this.absorbers;\n    var modeAbsorbers = this.interactivityAbsorbers;\n\n    if (mode === Enums_1.AbsorberClickMode.absorber) {\n      var absorbersModeOptions = void 0;\n\n      if (modeAbsorbers instanceof Array) {\n        if (modeAbsorbers.length > 0) {\n          absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n        }\n      } else {\n        absorbersModeOptions = modeAbsorbers;\n      }\n\n      var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions;\n      var aPosition = container.interactivity.mouse.clickPosition;\n      var absorber = new AbsorberInstance_1.AbsorberInstance(this, absorbersOptions, aPosition);\n      this.addAbsorber(absorber);\n    }\n  };\n\n  Absorbers.prototype.addAbsorber = function (absorber) {\n    this.array.push(absorber);\n  };\n\n  Absorbers.prototype.removeAbsorber = function (absorber) {\n    var index = this.array.indexOf(absorber);\n\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  };\n\n  return Absorbers;\n}();\n\nexports.Absorbers = Absorbers;","map":{"version":3,"sources":["/Users/guru/Desktop/Development/React/smartbrain/node_modules/tsparticles/dist/Plugins/Absorbers/Absorbers.js"],"names":["Object","defineProperty","exports","value","Absorbers","AbsorberInstance_1","require","Utils_1","Absorber_1","Enums_1","container","array","absorbers","interactivityAbsorbers","prototype","init","options","_a","_b","Array","map","s","tmp","Absorber","load","interactivity","modes","_i","_c","length","absorberOptions","absorber","AbsorberInstance","addAbsorber","particleUpdate","particle","delta","attract","destroyed","draw","context","save","restore","stop","resize","handleClickMode","mode","modeAbsorbers","AbsorberClickMode","absorbersModeOptions","Utils","itemFromArray","absorbersOptions","aPosition","mouse","clickPosition","push","removeAbsorber","index","indexOf","splice"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Absorbers = void 0;\nvar AbsorberInstance_1 = require(\"./AbsorberInstance\");\nvar Utils_1 = require(\"../../Utils\");\nvar Absorber_1 = require(\"./Options/Classes/Absorber\");\nvar Enums_1 = require(\"./Enums\");\nvar Absorbers = (function () {\n    function Absorbers(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n    }\n    Absorbers.prototype.init = function (options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.absorbers) {\n            if (options.absorbers instanceof Array) {\n                this.absorbers = options.absorbers.map(function (s) {\n                    var tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.absorbers instanceof Array) {\n                    this.absorbers = new Absorber_1.Absorber();\n                }\n                this.absorbers.load(options.absorbers);\n            }\n        }\n        var interactivityAbsorbers = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                this.interactivityAbsorbers = interactivityAbsorbers.map(function (s) {\n                    var tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityAbsorbers instanceof Array) {\n                    this.interactivityAbsorbers = new Absorber_1.Absorber();\n                }\n                this.interactivityAbsorbers.load(interactivityAbsorbers);\n            }\n        }\n        if (this.absorbers instanceof Array) {\n            for (var _i = 0, _c = this.absorbers; _i < _c.length; _i++) {\n                var absorberOptions = _c[_i];\n                var absorber = new AbsorberInstance_1.AbsorberInstance(this, absorberOptions);\n                this.addAbsorber(absorber);\n            }\n        }\n        else {\n            var absorberOptions = this.absorbers;\n            var absorber = new AbsorberInstance_1.AbsorberInstance(this, absorberOptions);\n            this.addAbsorber(absorber);\n        }\n    };\n    Absorbers.prototype.particleUpdate = function (particle, delta) {\n        for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n            var absorber = _a[_i];\n            absorber.attract(particle, delta);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    };\n    Absorbers.prototype.draw = function (context) {\n        for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n            var absorber = _a[_i];\n            context.save();\n            absorber.draw(context);\n            context.restore();\n        }\n    };\n    Absorbers.prototype.stop = function () {\n        this.array = [];\n    };\n    Absorbers.prototype.resize = function () {\n        for (var _i = 0, _a = this.array; _i < _a.length; _i++) {\n            var absorber = _a[_i];\n            absorber.resize();\n        }\n    };\n    Absorbers.prototype.handleClickMode = function (mode) {\n        var container = this.container;\n        var absorberOptions = this.absorbers;\n        var modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === Enums_1.AbsorberClickMode.absorber) {\n            var absorbersModeOptions = void 0;\n            if (modeAbsorbers instanceof Array) {\n                if (modeAbsorbers.length > 0) {\n                    absorbersModeOptions = Utils_1.Utils.itemFromArray(modeAbsorbers);\n                }\n            }\n            else {\n                absorbersModeOptions = modeAbsorbers;\n            }\n            var absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : (absorberOptions instanceof Array ? Utils_1.Utils.itemFromArray(absorberOptions) : absorberOptions);\n            var aPosition = container.interactivity.mouse.clickPosition;\n            var absorber = new AbsorberInstance_1.AbsorberInstance(this, absorbersOptions, aPosition);\n            this.addAbsorber(absorber);\n        }\n    };\n    Absorbers.prototype.addAbsorber = function (absorber) {\n        this.array.push(absorber);\n    };\n    Absorbers.prototype.removeAbsorber = function (absorber) {\n        var index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    };\n    return Absorbers;\n}());\nexports.Absorbers = Absorbers;\n"]},"metadata":{},"sourceType":"script"}