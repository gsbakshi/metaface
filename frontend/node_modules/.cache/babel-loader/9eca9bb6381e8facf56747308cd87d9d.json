{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particle = void 0;\n\nvar Updater_1 = require(\"./Particle/Updater\");\n\nvar Particles_1 = require(\"../Options/Classes/Particles/Particles\");\n\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\n\nvar Enums_1 = require(\"../Enums\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Particle = function () {\n  function Particle(container, position, overrideOptions) {\n    var _this = this;\n\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n\n    this.container = container;\n    this.fill = true;\n    this.close = true;\n    this.links = [];\n    this.lastNoiseTime = 0;\n    this.destroyed = false;\n    var options = container.options;\n    var particlesOptions = new Particles_1.Particles();\n    particlesOptions.load(options.particles);\n\n    if ((overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) !== undefined) {\n      var shapeType = (_a = overrideOptions.shape.type) !== null && _a !== void 0 ? _a : particlesOptions.shape.type;\n      this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n      var shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape !== undefined) {\n        var shapeData = shapeOptions.options[this.shape];\n\n        if (shapeData !== undefined) {\n          this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n          this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n          this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        }\n      }\n    } else {\n      var shapeType = particlesOptions.shape.type;\n      this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n      var shapeData = particlesOptions.shape.options[this.shape];\n\n      if (shapeData) {\n        this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n        this.fill = (_g = (_f = this.shapeData) === null || _f === void 0 ? void 0 : _f.fill) !== null && _g !== void 0 ? _g : this.fill;\n        this.close = (_j = (_h = this.shapeData) === null || _h === void 0 ? void 0 : _h.close) !== null && _j !== void 0 ? _j : this.close;\n      }\n    }\n\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n\n    if (((_k = this.shapeData) === null || _k === void 0 ? void 0 : _k.particles) !== undefined) {\n      particlesOptions.load((_l = this.shapeData) === null || _l === void 0 ? void 0 : _l.particles);\n    }\n\n    this.particlesOptions = particlesOptions;\n    var noiseDelay = this.particlesOptions.move.noise.delay;\n    this.noiseDelay = (noiseDelay.random.enable ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value) : noiseDelay.value) * 1000;\n    container.retina.initParticle(this);\n    var color = this.particlesOptions.color;\n    var sizeValue = (_m = this.sizeValue) !== null && _m !== void 0 ? _m : container.retina.sizeValue;\n    var randomSize = typeof this.particlesOptions.size.random === \"boolean\" ? this.particlesOptions.size.random : this.particlesOptions.size.random.enable;\n    this.size = {\n      value: randomSize && this.randomMinimumSize !== undefined ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue) : sizeValue\n    };\n    this.direction = this.particlesOptions.move.direction;\n    this.bubble = {\n      inRange: false\n    };\n    this.angle = this.particlesOptions.rotate.random ? Math.random() * 360 : this.particlesOptions.rotate.value;\n\n    if (this.particlesOptions.rotate.direction === Enums_1.RotateDirection.random) {\n      var index = Math.floor(Math.random() * 2);\n\n      if (index > 0) {\n        this.rotateDirection = Enums_1.RotateDirection.counterClockwise;\n      } else {\n        this.rotateDirection = Enums_1.RotateDirection.clockwise;\n      }\n    } else {\n      this.rotateDirection = this.particlesOptions.rotate.direction;\n    }\n\n    if (this.particlesOptions.size.animation.enable) {\n      switch (this.particlesOptions.size.animation.startValue) {\n        case Enums_1.StartValueType.min:\n          if (!randomSize) {\n            var pxRatio = container.retina.pixelRatio;\n            this.size.value = this.particlesOptions.size.animation.minimumValue * pxRatio;\n          }\n\n          break;\n      }\n\n      this.size.status = Enums_1.SizeAnimationStatus.increasing;\n      this.size.velocity = ((_o = this.sizeAnimationSpeed) !== null && _o !== void 0 ? _o : container.retina.sizeAnimationSpeed) / 100;\n\n      if (!this.particlesOptions.size.animation.sync) {\n        this.size.velocity = this.size.velocity * Math.random();\n      }\n    }\n\n    if (this.particlesOptions.color.animation.enable) {\n      this.colorVelocity = this.particlesOptions.color.animation.speed / 100;\n\n      if (!this.particlesOptions.color.animation.sync) {\n        this.colorVelocity = this.colorVelocity * Math.random();\n      }\n    } else {\n      this.colorVelocity = 0;\n    }\n\n    if (this.particlesOptions.rotate.animation.enable) {\n      if (!this.particlesOptions.rotate.animation.sync) {\n        this.angle = Math.random() * 360;\n      }\n    }\n\n    this.position = this.calcPosition(this.container, position);\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n\n    if (this.particlesOptions.collisions.enable) {\n      this.checkOverlap(position);\n    }\n\n    this.color = Utils_1.ColorUtils.colorToHsl(color);\n    var randomOpacity = this.particlesOptions.opacity.random;\n    var opacityValue = this.particlesOptions.opacity.value;\n    this.opacity = {\n      value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue\n    };\n\n    if (this.particlesOptions.opacity.animation.enable) {\n      this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n      this.opacity.velocity = this.particlesOptions.opacity.animation.speed / 100;\n\n      if (!this.particlesOptions.opacity.animation.sync) {\n        this.opacity.velocity *= Math.random();\n      }\n    }\n\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = {\n      horizontal: this.initialVelocity.horizontal,\n      vertical: this.initialVelocity.vertical\n    };\n    var drawer = container.drawers[this.shape];\n\n    if (!drawer) {\n      drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n      container.drawers[this.shape] = drawer;\n    }\n\n    if (this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images) {\n      var shape = this.particlesOptions.shape;\n      var imageDrawer = drawer;\n      var imagesOptions = shape.options[this.shape];\n      var images = imageDrawer.getImages(container).images;\n      var index = Utils_1.Utils.arrayRandomIndex(images);\n      var image_1 = images[index];\n      var optionsImage_1 = imagesOptions instanceof Array ? imagesOptions.filter(function (t) {\n        return t.src === image_1.source;\n      })[0] : imagesOptions;\n      var color_1 = this.getColor();\n\n      if ((image_1 === null || image_1 === void 0 ? void 0 : image_1.svgData) !== undefined && optionsImage_1.replaceColor && color_1) {\n        var svgColoredData = Utils_1.Utils.replaceColorSvg(image_1, color_1, this.opacity.value);\n        var svg = new Blob([svgColoredData], {\n          type: \"image/svg+xml\"\n        });\n        var domUrl_1 = window.URL || window.webkitURL || window;\n        var url_1 = domUrl_1.createObjectURL(svg);\n        var img_1 = new Image();\n        this.image = {\n          data: image_1,\n          loaded: false,\n          ratio: optionsImage_1.width / optionsImage_1.height,\n          replaceColor: (_p = optionsImage_1.replaceColor) !== null && _p !== void 0 ? _p : optionsImage_1.replace_color,\n          source: optionsImage_1.src\n        };\n        img_1.addEventListener(\"load\", function () {\n          if (_this.image) {\n            _this.image.loaded = true;\n            image_1.element = img_1;\n          }\n\n          domUrl_1.revokeObjectURL(url_1);\n        });\n        img_1.addEventListener(\"error\", function () {\n          domUrl_1.revokeObjectURL(url_1);\n          Utils_1.Utils.loadImage(optionsImage_1.src).then(function (img2) {\n            if (_this.image) {\n              image_1.element = img2.element;\n              _this.image.loaded = true;\n            }\n          });\n        });\n        img_1.src = url_1;\n      } else {\n        this.image = {\n          data: image_1,\n          loaded: true,\n          ratio: optionsImage_1.width / optionsImage_1.height,\n          replaceColor: (_q = optionsImage_1.replaceColor) !== null && _q !== void 0 ? _q : optionsImage_1.replace_color,\n          source: optionsImage_1.src\n        };\n      }\n\n      if (!this.image.ratio) {\n        this.image.ratio = 1;\n      }\n\n      this.fill = (_r = optionsImage_1.fill) !== null && _r !== void 0 ? _r : this.fill;\n      this.close = (_s = optionsImage_1.close) !== null && _s !== void 0 ? _s : this.close;\n    }\n\n    this.stroke = this.particlesOptions.stroke instanceof Array ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke) : this.particlesOptions.stroke;\n    this.strokeColor = Utils_1.ColorUtils.colorToRgb(this.stroke.color);\n    this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n    this.updater = new Updater_1.Updater(this.container, this);\n  }\n\n  Particle.prototype.update = function (index, delta) {\n    this.links = [];\n    this.updater.update(delta);\n  };\n\n  Particle.prototype.draw = function (delta) {\n    var _a;\n\n    if (((_a = this.image) === null || _a === void 0 ? void 0 : _a.loaded) === false) {\n      return;\n    }\n\n    this.container.canvas.drawParticle(this, delta);\n  };\n\n  Particle.prototype.isOverlapping = function () {\n    var _this = this;\n\n    var container = this.container;\n    var collisionFound = false;\n    var iterations = 0;\n    var pos1 = this.getPosition();\n\n    for (var _i = 0, _a = container.particles.array.filter(function (t) {\n      return t != _this;\n    }); _i < _a.length; _i++) {\n      var p2 = _a[_i];\n      iterations++;\n      var pos2 = p2.getPosition();\n      var dist = Utils_1.Utils.getDistance(pos1, pos2);\n\n      if (dist <= this.size.value + p2.size.value) {\n        collisionFound = true;\n        break;\n      }\n    }\n\n    return {\n      collisionFound: collisionFound,\n      iterations: iterations\n    };\n  };\n\n  Particle.prototype.checkOverlap = function (position) {\n    var container = this.container;\n    var overlapResult = this.isOverlapping();\n\n    if (overlapResult.iterations >= container.particles.count) {\n      container.particles.remove(this);\n    } else if (overlapResult.collisionFound) {\n      this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n      this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n      this.checkOverlap();\n    }\n  };\n\n  Particle.prototype.startInfection = function (stage) {\n    var container = this.container;\n    var options = container.options;\n    var stages = options.infection.stages;\n    var stagesCount = stages.length;\n\n    if (stage > stagesCount || stage < 0) {\n      return;\n    }\n\n    this.infectionDelay = 0;\n    this.infectionDelayStage = stage;\n  };\n\n  Particle.prototype.updateInfectionStage = function (stage) {\n    var container = this.container;\n    var options = container.options;\n    var stagesCount = options.infection.stages.length;\n\n    if (stage > stagesCount || stage < 0 || this.infectionStage !== undefined && this.infectionStage > stage) {\n      return;\n    }\n\n    if (this.infectionTimeout !== undefined) {\n      window.clearTimeout(this.infectionTimeout);\n    }\n\n    this.infectionStage = stage;\n    this.infectionTime = 0;\n  };\n\n  Particle.prototype.updateInfection = function (delta) {\n    var container = this.container;\n    var options = container.options;\n    var infection = options.infection;\n    var stages = options.infection.stages;\n    var stagesCount = stages.length;\n\n    if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n      var stage = this.infectionDelayStage;\n\n      if (stage > stagesCount || stage < 0) {\n        return;\n      }\n\n      if (this.infectionDelay > infection.delay * 1000) {\n        this.infectionStage = stage;\n        this.infectionTime = 0;\n        delete this.infectionDelay;\n        delete this.infectionDelayStage;\n      } else {\n        this.infectionDelay += delta;\n      }\n    } else {\n      delete this.infectionDelay;\n      delete this.infectionDelayStage;\n    }\n\n    if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n      var infectionStage = stages[this.infectionStage];\n\n      if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n        if (this.infectionTime > infectionStage.duration * 1000) {\n          this.nextInfectionStage();\n        } else {\n          this.infectionTime += delta;\n        }\n      } else {\n        this.infectionTime += delta;\n      }\n    } else {\n      delete this.infectionStage;\n      delete this.infectionTime;\n    }\n  };\n\n  Particle.prototype.getPosition = function () {\n    return {\n      x: this.position.x + this.offset.x,\n      y: this.position.y + this.offset.y\n    };\n  };\n\n  Particle.prototype.getColor = function () {\n    var _a;\n\n    return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n  };\n\n  Particle.prototype.destroy = function () {\n    this.destroyed = true;\n  };\n\n  Particle.prototype.nextInfectionStage = function () {\n    var container = this.container;\n    var options = container.options;\n    var stagesCount = options.infection.stages.length;\n\n    if (stagesCount <= 0 || this.infectionStage === undefined) {\n      return;\n    }\n\n    this.infectionTime = 0;\n\n    if (stagesCount <= ++this.infectionStage) {\n      if (options.infection.cure) {\n        delete this.infectionStage;\n        delete this.infectionTime;\n        return;\n      } else {\n        this.infectionStage = 0;\n        this.infectionTime = 0;\n      }\n    }\n  };\n\n  Particle.prototype.calcPosition = function (container, position) {\n    for (var id in container.plugins) {\n      var plugin = container.plugins[id];\n      var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n\n      if (pluginPos !== undefined) {\n        return pluginPos;\n      }\n    }\n\n    var pos = {\n      x: 0,\n      y: 0\n    };\n    pos.x = position ? position.x : Math.random() * container.canvas.size.width;\n    pos.y = position ? position.y : Math.random() * container.canvas.size.height;\n\n    if (pos.x > container.canvas.size.width - this.size.value * 2) {\n      pos.x -= this.size.value;\n    } else if (pos.x < this.size.value * 2) {\n      pos.x += this.size.value;\n    }\n\n    if (pos.y > container.canvas.size.height - this.size.value * 2) {\n      pos.y -= this.size.value;\n    } else if (pos.y < this.size.value * 2) {\n      pos.y += this.size.value;\n    }\n\n    return pos;\n  };\n\n  Particle.prototype.calculateVelocity = function () {\n    var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n    var res = {\n      horizontal: 0,\n      vertical: 0\n    };\n\n    if (this.particlesOptions.move.straight) {\n      res.horizontal = baseVelocity.x;\n      res.vertical = baseVelocity.y;\n\n      if (this.particlesOptions.move.random) {\n        res.horizontal *= Math.random();\n        res.vertical *= Math.random();\n      }\n    } else {\n      res.horizontal = baseVelocity.x + Math.random() - 0.5;\n      res.vertical = baseVelocity.y + Math.random() - 0.5;\n    }\n\n    return res;\n  };\n\n  return Particle;\n}();\n\nexports.Particle = Particle;","map":{"version":3,"sources":["/Users/guru/Desktop/Development/React/smartbrain/node_modules/tsparticles/dist/Core/Particle.js"],"names":["Object","defineProperty","exports","value","Particle","Updater_1","require","Particles_1","Shape_1","Enums_1","Utils_1","container","position","overrideOptions","_this","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","fill","close","links","lastNoiseTime","destroyed","options","particlesOptions","Particles","load","particles","shape","undefined","shapeType","type","Array","Utils","itemFromArray","shapeOptions","Shape","shapeData","deepExtend","noiseDelay","move","noise","delay","random","enable","randomInRange","minimumValue","retina","initParticle","color","sizeValue","randomSize","size","randomMinimumSize","direction","bubble","inRange","angle","rotate","Math","RotateDirection","index","floor","rotateDirection","counterClockwise","clockwise","animation","startValue","StartValueType","min","pxRatio","pixelRatio","status","SizeAnimationStatus","increasing","velocity","sizeAnimationSpeed","sync","colorVelocity","speed","calcPosition","offset","x","y","collisions","checkOverlap","ColorUtils","colorToHsl","randomOpacity","opacity","opacityValue","OpacityAnimationStatus","initialVelocity","calculateVelocity","horizontal","vertical","drawer","drawers","Plugins","getShapeDrawer","ShapeType","image","images","imageDrawer","imagesOptions","getImages","arrayRandomIndex","image_1","optionsImage_1","filter","t","src","source","color_1","getColor","svgData","replaceColor","svgColoredData","replaceColorSvg","svg","Blob","domUrl_1","window","URL","webkitURL","url_1","createObjectURL","img_1","Image","data","loaded","ratio","width","height","replace_color","addEventListener","element","revokeObjectURL","loadImage","then","img2","stroke","strokeColor","colorToRgb","shadowColor","shadow","updater","Updater","prototype","update","delta","draw","canvas","drawParticle","isOverlapping","collisionFound","iterations","pos1","getPosition","_i","array","length","p2","pos2","dist","getDistance","overlapResult","count","remove","startInfection","stage","stages","infection","stagesCount","infectionDelay","infectionDelayStage","updateInfectionStage","infectionStage","infectionTimeout","clearTimeout","infectionTime","updateInfection","duration","nextInfectionStage","destroy","cure","id","plugins","plugin","pluginPos","particlePosition","pos","baseVelocity","getParticleBaseVelocity","res","straight"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nvar Updater_1 = require(\"./Particle/Updater\");\nvar Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nvar Enums_1 = require(\"../Enums\");\nvar Utils_1 = require(\"../Utils\");\nvar Particle = (function () {\n    function Particle(container, position, overrideOptions) {\n        var _this = this;\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s;\n        this.container = container;\n        this.fill = true;\n        this.close = true;\n        this.links = [];\n        this.lastNoiseTime = 0;\n        this.destroyed = false;\n        var options = container.options;\n        var particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        if ((overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) !== undefined) {\n            var shapeType = (_a = overrideOptions.shape.type) !== null && _a !== void 0 ? _a : particlesOptions.shape.type;\n            this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n            var shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape !== undefined) {\n                var shapeData = shapeOptions.options[this.shape];\n                if (shapeData !== undefined) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n                    this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n                    this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n                }\n            }\n        }\n        else {\n            var shapeType = particlesOptions.shape.type;\n            this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType) : shapeType;\n            var shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData) : shapeData);\n                this.fill = (_g = (_f = this.shapeData) === null || _f === void 0 ? void 0 : _f.fill) !== null && _g !== void 0 ? _g : this.fill;\n                this.close = (_j = (_h = this.shapeData) === null || _h === void 0 ? void 0 : _h.close) !== null && _j !== void 0 ? _j : this.close;\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_k = this.shapeData) === null || _k === void 0 ? void 0 : _k.particles) !== undefined) {\n            particlesOptions.load((_l = this.shapeData) === null || _l === void 0 ? void 0 : _l.particles);\n        }\n        this.particlesOptions = particlesOptions;\n        var noiseDelay = this.particlesOptions.move.noise.delay;\n        this.noiseDelay =\n            (noiseDelay.random.enable\n                ? Utils_1.Utils.randomInRange(noiseDelay.random.minimumValue, noiseDelay.value)\n                : noiseDelay.value) * 1000;\n        container.retina.initParticle(this);\n        var color = this.particlesOptions.color;\n        var sizeValue = (_m = this.sizeValue) !== null && _m !== void 0 ? _m : container.retina.sizeValue;\n        var randomSize = typeof this.particlesOptions.size.random === \"boolean\"\n            ? this.particlesOptions.size.random\n            : this.particlesOptions.size.random.enable;\n        this.size = {\n            value: randomSize && this.randomMinimumSize !== undefined\n                ? Utils_1.Utils.randomInRange(this.randomMinimumSize, sizeValue)\n                : sizeValue,\n        };\n        this.direction = this.particlesOptions.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.angle = this.particlesOptions.rotate.random ? Math.random() * 360 : this.particlesOptions.rotate.value;\n        if (this.particlesOptions.rotate.direction === Enums_1.RotateDirection.random) {\n            var index = Math.floor(Math.random() * 2);\n            if (index > 0) {\n                this.rotateDirection = Enums_1.RotateDirection.counterClockwise;\n            }\n            else {\n                this.rotateDirection = Enums_1.RotateDirection.clockwise;\n            }\n        }\n        else {\n            this.rotateDirection = this.particlesOptions.rotate.direction;\n        }\n        if (this.particlesOptions.size.animation.enable) {\n            switch (this.particlesOptions.size.animation.startValue) {\n                case Enums_1.StartValueType.min:\n                    if (!randomSize) {\n                        var pxRatio = container.retina.pixelRatio;\n                        this.size.value = this.particlesOptions.size.animation.minimumValue * pxRatio;\n                    }\n                    break;\n            }\n            this.size.status = Enums_1.SizeAnimationStatus.increasing;\n            this.size.velocity = ((_o = this.sizeAnimationSpeed) !== null && _o !== void 0 ? _o : container.retina.sizeAnimationSpeed) / 100;\n            if (!this.particlesOptions.size.animation.sync) {\n                this.size.velocity = this.size.velocity * Math.random();\n            }\n        }\n        if (this.particlesOptions.color.animation.enable) {\n            this.colorVelocity = this.particlesOptions.color.animation.speed / 100;\n            if (!this.particlesOptions.color.animation.sync) {\n                this.colorVelocity = this.colorVelocity * Math.random();\n            }\n        }\n        else {\n            this.colorVelocity = 0;\n        }\n        if (this.particlesOptions.rotate.animation.enable) {\n            if (!this.particlesOptions.rotate.animation.sync) {\n                this.angle = Math.random() * 360;\n            }\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        if (this.particlesOptions.collisions.enable) {\n            this.checkOverlap(position);\n        }\n        this.color = Utils_1.ColorUtils.colorToHsl(color);\n        var randomOpacity = this.particlesOptions.opacity.random;\n        var opacityValue = this.particlesOptions.opacity.value;\n        this.opacity = {\n            value: randomOpacity.enable ? Utils_1.Utils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue,\n        };\n        if (this.particlesOptions.opacity.animation.enable) {\n            this.opacity.status = Enums_1.OpacityAnimationStatus.increasing;\n            this.opacity.velocity = this.particlesOptions.opacity.animation.speed / 100;\n            if (!this.particlesOptions.opacity.animation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        var drawer = container.drawers[this.shape];\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            container.drawers[this.shape] = drawer;\n        }\n        if (this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images) {\n            var shape = this.particlesOptions.shape;\n            var imageDrawer = drawer;\n            var imagesOptions = shape.options[this.shape];\n            var images = imageDrawer.getImages(container).images;\n            var index = Utils_1.Utils.arrayRandomIndex(images);\n            var image_1 = images[index];\n            var optionsImage_1 = (imagesOptions instanceof Array\n                ? imagesOptions.filter(function (t) { return t.src === image_1.source; })[0]\n                : imagesOptions);\n            var color_1 = this.getColor();\n            if ((image_1 === null || image_1 === void 0 ? void 0 : image_1.svgData) !== undefined && optionsImage_1.replaceColor && color_1) {\n                var svgColoredData = Utils_1.Utils.replaceColorSvg(image_1, color_1, this.opacity.value);\n                var svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n                var domUrl_1 = window.URL || window.webkitURL || window;\n                var url_1 = domUrl_1.createObjectURL(svg);\n                var img_1 = new Image();\n                this.image = {\n                    data: image_1,\n                    loaded: false,\n                    ratio: optionsImage_1.width / optionsImage_1.height,\n                    replaceColor: (_p = optionsImage_1.replaceColor) !== null && _p !== void 0 ? _p : optionsImage_1.replace_color,\n                    source: optionsImage_1.src,\n                };\n                img_1.addEventListener(\"load\", function () {\n                    if (_this.image) {\n                        _this.image.loaded = true;\n                        image_1.element = img_1;\n                    }\n                    domUrl_1.revokeObjectURL(url_1);\n                });\n                img_1.addEventListener(\"error\", function () {\n                    domUrl_1.revokeObjectURL(url_1);\n                    Utils_1.Utils.loadImage(optionsImage_1.src).then(function (img2) {\n                        if (_this.image) {\n                            image_1.element = img2.element;\n                            _this.image.loaded = true;\n                        }\n                    });\n                });\n                img_1.src = url_1;\n            }\n            else {\n                this.image = {\n                    data: image_1,\n                    loaded: true,\n                    ratio: optionsImage_1.width / optionsImage_1.height,\n                    replaceColor: (_q = optionsImage_1.replaceColor) !== null && _q !== void 0 ? _q : optionsImage_1.replace_color,\n                    source: optionsImage_1.src,\n                };\n            }\n            if (!this.image.ratio) {\n                this.image.ratio = 1;\n            }\n            this.fill = (_r = optionsImage_1.fill) !== null && _r !== void 0 ? _r : this.fill;\n            this.close = (_s = optionsImage_1.close) !== null && _s !== void 0 ? _s : this.close;\n        }\n        this.stroke =\n            this.particlesOptions.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke)\n                : this.particlesOptions.stroke;\n        this.strokeColor = Utils_1.ColorUtils.colorToRgb(this.stroke.color);\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(this.container, this);\n    }\n    Particle.prototype.update = function (index, delta) {\n        this.links = [];\n        this.updater.update(delta);\n    };\n    Particle.prototype.draw = function (delta) {\n        var _a;\n        if (((_a = this.image) === null || _a === void 0 ? void 0 : _a.loaded) === false) {\n            return;\n        }\n        this.container.canvas.drawParticle(this, delta);\n    };\n    Particle.prototype.isOverlapping = function () {\n        var _this = this;\n        var container = this.container;\n        var collisionFound = false;\n        var iterations = 0;\n        var pos1 = this.getPosition();\n        for (var _i = 0, _a = container.particles.array.filter(function (t) { return t != _this; }); _i < _a.length; _i++) {\n            var p2 = _a[_i];\n            iterations++;\n            var pos2 = p2.getPosition();\n            var dist = Utils_1.Utils.getDistance(pos1, pos2);\n            if (dist <= this.size.value + p2.size.value) {\n                collisionFound = true;\n                break;\n            }\n        }\n        return {\n            collisionFound: collisionFound,\n            iterations: iterations,\n        };\n    };\n    Particle.prototype.checkOverlap = function (position) {\n        var container = this.container;\n        var overlapResult = this.isOverlapping();\n        if (overlapResult.iterations >= container.particles.count) {\n            container.particles.remove(this);\n        }\n        else if (overlapResult.collisionFound) {\n            this.position.x = position ? position.x : Math.random() * container.canvas.size.width;\n            this.position.y = position ? position.y : Math.random() * container.canvas.size.height;\n            this.checkOverlap();\n        }\n    };\n    Particle.prototype.startInfection = function (stage) {\n        var container = this.container;\n        var options = container.options;\n        var stages = options.infection.stages;\n        var stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        this.infectionDelay = 0;\n        this.infectionDelayStage = stage;\n    };\n    Particle.prototype.updateInfectionStage = function (stage) {\n        var container = this.container;\n        var options = container.options;\n        var stagesCount = options.infection.stages.length;\n        if (stage > stagesCount || stage < 0 || (this.infectionStage !== undefined && this.infectionStage > stage)) {\n            return;\n        }\n        if (this.infectionTimeout !== undefined) {\n            window.clearTimeout(this.infectionTimeout);\n        }\n        this.infectionStage = stage;\n        this.infectionTime = 0;\n    };\n    Particle.prototype.updateInfection = function (delta) {\n        var container = this.container;\n        var options = container.options;\n        var infection = options.infection;\n        var stages = options.infection.stages;\n        var stagesCount = stages.length;\n        if (this.infectionDelay !== undefined && this.infectionDelayStage !== undefined) {\n            var stage = this.infectionDelayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (this.infectionDelay > infection.delay * 1000) {\n                this.infectionStage = stage;\n                this.infectionTime = 0;\n                delete this.infectionDelay;\n                delete this.infectionDelayStage;\n            }\n            else {\n                this.infectionDelay += delta;\n            }\n        }\n        else {\n            delete this.infectionDelay;\n            delete this.infectionDelayStage;\n        }\n        if (this.infectionStage !== undefined && this.infectionTime !== undefined) {\n            var infectionStage = stages[this.infectionStage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (this.infectionTime > infectionStage.duration * 1000) {\n                    this.nextInfectionStage();\n                }\n                else {\n                    this.infectionTime += delta;\n                }\n            }\n            else {\n                this.infectionTime += delta;\n            }\n        }\n        else {\n            delete this.infectionStage;\n            delete this.infectionTime;\n        }\n    };\n    Particle.prototype.getPosition = function () {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n        };\n    };\n    Particle.prototype.getColor = function () {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color;\n    };\n    Particle.prototype.destroy = function () {\n        this.destroyed = true;\n    };\n    Particle.prototype.nextInfectionStage = function () {\n        var container = this.container;\n        var options = container.options;\n        var stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || this.infectionStage === undefined) {\n            return;\n        }\n        this.infectionTime = 0;\n        if (stagesCount <= ++this.infectionStage) {\n            if (options.infection.cure) {\n                delete this.infectionStage;\n                delete this.infectionTime;\n                return;\n            }\n            else {\n                this.infectionStage = 0;\n                this.infectionTime = 0;\n            }\n        }\n    };\n    Particle.prototype.calcPosition = function (container, position) {\n        for (var id in container.plugins) {\n            var plugin = container.plugins[id];\n            var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return pluginPos;\n            }\n        }\n        var pos = { x: 0, y: 0 };\n        pos.x = position ? position.x : Math.random() * container.canvas.size.width;\n        pos.y = position ? position.y : Math.random() * container.canvas.size.height;\n        if (pos.x > container.canvas.size.width - this.size.value * 2) {\n            pos.x -= this.size.value;\n        }\n        else if (pos.x < this.size.value * 2) {\n            pos.x += this.size.value;\n        }\n        if (pos.y > container.canvas.size.height - this.size.value * 2) {\n            pos.y -= this.size.value;\n        }\n        else if (pos.y < this.size.value * 2) {\n            pos.y += this.size.value;\n        }\n        return pos;\n    };\n    Particle.prototype.calculateVelocity = function () {\n        var baseVelocity = Utils_1.Utils.getParticleBaseVelocity(this);\n        var res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        if (this.particlesOptions.move.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (this.particlesOptions.move.random) {\n                res.horizontal *= Math.random();\n                res.vertical *= Math.random();\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Math.random() - 0.5;\n            res.vertical = baseVelocity.y + Math.random() - 0.5;\n        }\n        return res;\n    };\n    return Particle;\n}());\nexports.Particle = Particle;\n"]},"metadata":{},"sourceType":"script"}