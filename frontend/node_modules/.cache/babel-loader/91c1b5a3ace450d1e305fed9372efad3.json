{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Canvas = void 0;\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Canvas = function () {\n  function Canvas(container) {\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this.context = null;\n    this.generatedCanvas = false;\n  }\n\n  Canvas.prototype.init = function () {\n    this.resize();\n    var container = this.container;\n    var options = container.options;\n    var cover = options.backgroundMask.cover;\n    var color = cover.color;\n    var trail = options.particles.move.trail;\n    this.coverColor = Utils_1.ColorUtils.colorToRgb(color);\n    this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n    this.paint();\n  };\n\n  Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n    var _a;\n\n    if (!canvas.className) {\n      canvas.className = Utils_1.Constants.canvasClass;\n    }\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n    this.element = canvas;\n    this.size.height = canvas.offsetHeight;\n    this.size.width = canvas.offsetWidth;\n    this.context = this.element.getContext(\"2d\");\n    this.container.retina.init();\n    this.initBackground();\n  };\n\n  Canvas.prototype.destroy = function () {\n    var _a;\n\n    if (this.generatedCanvas) {\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n\n    if (this.context) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.resize = function () {\n    if (this.element) {\n      this.element.width = this.size.width;\n      this.element.height = this.size.height;\n    }\n  };\n\n  Canvas.prototype.paint = function () {\n    var container = this.container;\n    var options = container.options;\n\n    if (this.context) {\n      if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n        this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor));\n      } else {\n        this.paintBase();\n      }\n    }\n  };\n\n  Canvas.prototype.clear = function () {\n    var container = this.container;\n    var options = container.options;\n    var trail = options.particles.move.trail;\n\n    if (options.backgroundMask.enable) {\n      this.paint();\n    } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n      this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n    } else if (this.context) {\n      Utils_1.CanvasUtils.clear(this.context, this.size);\n    }\n  };\n\n  Canvas.prototype.isPointInPath = function (path, point) {\n    var _a, _b;\n\n    return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n  };\n\n  Canvas.prototype.drawLinkTriangle = function (p1, link1, link2) {\n    var _a, _b;\n\n    var container = this.container;\n    var options = container.options;\n    var p2 = link1.destination;\n    var p3 = link2.destination;\n    var triangleOptions = p1.particlesOptions.links.triangles;\n    var opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n    var pos1 = p1.getPosition();\n    var pos2 = p2.getPosition();\n    var pos3 = p3.getPosition();\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n\n    if (!colorTriangle) {\n      var linksOptions = p1.particlesOptions.links;\n      var linkColor = linksOptions.id !== undefined ? container.particles.linksColors[linksOptions.id] : container.particles.linksColor;\n\n      if (linkColor === Utils_1.Constants.randomColorValue) {\n        colorTriangle = Utils_1.ColorUtils.getRandomRgbColor();\n      } else if (linkColor === \"mid\") {\n        var sourceColor = p1.getColor();\n        var destColor = p2.getColor();\n\n        if (sourceColor && destColor) {\n          colorTriangle = Utils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n        } else {\n          var hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n\n          if (!hslColor) {\n            return;\n          }\n\n          colorTriangle = Utils_1.ColorUtils.hslToRgb(hslColor);\n        }\n      } else {\n        colorTriangle = linkColor;\n      }\n    }\n\n    var width = (_b = p1.linksWidth) !== null && _b !== void 0 ? _b : container.retina.linksWidth;\n    Utils_1.CanvasUtils.drawLinkTriangle(ctx, width, pos1, pos2, pos3, options.backgroundMask.enable, colorTriangle, opacityTriangle);\n  };\n\n  Canvas.prototype.drawLinkLine = function (p1, link) {\n    var _a;\n\n    var container = this.container;\n    var options = container.options;\n    var p2 = link.destination;\n    var opacity = link.opacity;\n    var pos1 = p1.getPosition();\n    var pos2 = p2.getPosition();\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var colorLine;\n    var twinkle = p1.particlesOptions.twinkle.lines;\n\n    if (twinkle.enable) {\n      var twinkleFreq = twinkle.frequency;\n      var twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n      var twinkling = Math.random() < twinkleFreq;\n\n      if (twinkling && twinkleRgb !== undefined) {\n        colorLine = twinkleRgb;\n        opacity = twinkle.opacity;\n      }\n    }\n\n    if (!colorLine) {\n      var linksOptions = p1.particlesOptions.links;\n      var linkColor = linksOptions.id !== undefined ? container.particles.linksColors[linksOptions.id] : container.particles.linksColor;\n\n      if (linkColor === Utils_1.Constants.randomColorValue) {\n        colorLine = Utils_1.ColorUtils.getRandomRgbColor();\n      } else if (linkColor === \"mid\") {\n        var sourceColor = p1.getColor();\n        var destColor = p2.getColor();\n\n        if (sourceColor && destColor) {\n          colorLine = Utils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n        } else {\n          var hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n\n          if (!hslColor) {\n            return;\n          }\n\n          colorLine = Utils_1.ColorUtils.hslToRgb(hslColor);\n        }\n      } else {\n        colorLine = linkColor;\n      }\n    }\n\n    var width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n    Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, p1.particlesOptions.links.distance, container.canvas.size, p1.particlesOptions.links.warp, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.links.shadow);\n  };\n\n  Canvas.prototype.drawConnectLine = function (p1, p2) {\n    var _a;\n\n    var lineStyle = this.lineStyle(p1, p2);\n\n    if (!lineStyle) {\n      return;\n    }\n\n    var ctx = this.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var pos1 = p1.getPosition();\n    var pos2 = p2.getPosition();\n    Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n  };\n\n  Canvas.prototype.drawGrabLine = function (particle, lineColor, opacity, mousePos) {\n    var _a;\n\n    var container = this.container;\n    var ctx = container.canvas.context;\n\n    if (!ctx) {\n      return;\n    }\n\n    var beginPos = particle.getPosition();\n    Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n  };\n\n  Canvas.prototype.drawParticle = function (particle, delta) {\n    var _a, _b;\n\n    var pColor = particle.getColor();\n\n    if (pColor === undefined) {\n      return;\n    }\n\n    var container = this.container;\n    var options = container.options;\n    var twinkle = particle.particlesOptions.twinkle.particles;\n    var twinkleFreq = twinkle.frequency;\n    var twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n    var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n    var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n    var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n    var infectionStage = particle.infectionStage;\n    var infection = options.infection;\n    var infectionStages = infection.stages;\n    var infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n    var infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n    var color = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : Utils_1.ColorUtils.hslToRgb(pColor);\n    var colorValue = color !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(color, opacity) : undefined;\n\n    if (!this.context || !colorValue) {\n      return;\n    }\n\n    if (particle.links.length > 0) {\n      this.context.save();\n\n      var _loop_1 = function (link) {\n        if (particle.particlesOptions.links.triangles.enable) {\n          var links_1 = particle.links.map(function (l) {\n            return l.destination;\n          });\n          var vertices = link.destination.links.filter(function (t) {\n            return links_1.indexOf(t.destination) >= 0;\n          });\n\n          if (vertices.length) {\n            for (var _i = 0, vertices_1 = vertices; _i < vertices_1.length; _i++) {\n              var vertice = vertices_1[_i];\n              this_1.drawLinkTriangle(particle, link, vertice);\n            }\n          }\n        }\n\n        this_1.drawLinkLine(particle, link);\n      };\n\n      var this_1 = this;\n\n      for (var _i = 0, _c = particle.links; _i < _c.length; _i++) {\n        var link = _c[_i];\n\n        _loop_1(link);\n      }\n\n      this.context.restore();\n    }\n\n    Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n  };\n\n  Canvas.prototype.drawPlugin = function (plugin, delta) {\n    if (!this.context) {\n      return;\n    }\n\n    Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n  };\n\n  Canvas.prototype.paintBase = function (baseColor) {\n    if (this.context) {\n      Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n    }\n  };\n\n  Canvas.prototype.lineStyle = function (p1, p2) {\n    var container = this.container;\n    var options = container.options;\n    var connectOptions = options.interactivity.modes.connect;\n\n    if (this.context) {\n      return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n    }\n  };\n\n  Canvas.prototype.initBackground = function () {\n    var container = this.container;\n    var options = container.options;\n    var background = options.background;\n    var element = this.element;\n\n    if (!element) {\n      return;\n    }\n\n    var elementStyle = element.style;\n\n    if (background.color) {\n      var color = Utils_1.ColorUtils.colorToRgb(background.color);\n\n      if (color) {\n        elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n      }\n    }\n\n    if (background.image) {\n      elementStyle.backgroundImage = background.image;\n    }\n\n    if (background.position) {\n      elementStyle.backgroundPosition = background.position;\n    }\n\n    if (background.repeat) {\n      elementStyle.backgroundRepeat = background.repeat;\n    }\n\n    if (background.size) {\n      elementStyle.backgroundSize = background.size;\n    }\n  };\n\n  return Canvas;\n}();\n\nexports.Canvas = Canvas;","map":{"version":3,"sources":["/Volumes/AltDisk/Work/Learning/Udemy/Web Dev Course - Udemy/React/smartbrain/node_modules/tsparticles/dist/Core/Canvas.js"],"names":["Object","defineProperty","exports","value","Canvas","Utils_1","require","container","size","height","width","context","generatedCanvas","prototype","init","resize","options","cover","backgroundMask","color","trail","particles","move","coverColor","ColorUtils","colorToRgb","trailFillColor","fillColor","paint","loadCanvas","canvas","_a","className","Constants","canvasClass","element","remove","offsetHeight","offsetWidth","getContext","retina","initBackground","destroy","CanvasUtils","clear","enable","paintBase","getStyleFromRgb","length","isPointInPath","path","point","_b","x","y","drawLinkTriangle","p1","link1","link2","p2","destination","p3","triangleOptions","particlesOptions","links","triangles","opacityTriangle","opacity","pos1","getPosition","pos2","pos3","ctx","colorTriangle","linksOptions","linkColor","id","undefined","linksColors","linksColor","randomColorValue","getRandomRgbColor","sourceColor","getColor","destColor","mix","hslColor","hslToRgb","linksWidth","drawLinkLine","link","colorLine","twinkle","lines","twinkleFreq","frequency","twinkleRgb","twinkling","Math","random","distance","warp","shadow","drawConnectLine","lineStyle","drawGrabLine","particle","lineColor","mousePos","beginPos","drawParticle","delta","pColor","radius","bubble","infectionStage","infection","infectionStages","stages","infectionColor","infectionRgb","colorValue","save","_loop_1","links_1","map","l","vertices","filter","t","indexOf","_i","vertices_1","vertice","this_1","_c","restore","drawPlugin","plugin","baseColor","connectOptions","interactivity","modes","connect","gradient","background","elementStyle","style","backgroundColor","image","backgroundImage","position","backgroundPosition","repeat","backgroundRepeat","backgroundSize"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIF,MAAM,GAAI,YAAY;AACtB,WAASA,MAAT,CAAgBG,SAAhB,EAA2B;AACvB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,IAAL,GAAY;AACRC,MAAAA,MAAM,EAAE,CADA;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAZ;AAIA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACH;;AACDR,EAAAA,MAAM,CAACS,SAAP,CAAiBC,IAAjB,GAAwB,YAAY;AAChC,SAAKC,MAAL;AACA,QAAIR,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;AACA,QAAIC,KAAK,GAAGD,OAAO,CAACE,cAAR,CAAuBD,KAAnC;AACA,QAAIE,KAAK,GAAGF,KAAK,CAACE,KAAlB;AACA,QAAIC,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,IAAlB,CAAuBF,KAAnC;AACA,SAAKG,UAAL,GAAkBlB,OAAO,CAACmB,UAAR,CAAmBC,UAAnB,CAA8BN,KAA9B,CAAlB;AACA,SAAKO,cAAL,GAAsBrB,OAAO,CAACmB,UAAR,CAAmBC,UAAnB,CAA8BL,KAAK,CAACO,SAApC,CAAtB;AACA,SAAKC,KAAL;AACH,GAVD;;AAWAxB,EAAAA,MAAM,CAACS,SAAP,CAAiBgB,UAAjB,GAA8B,UAAUC,MAAV,EAAkBlB,eAAlB,EAAmC;AAC7D,QAAImB,EAAJ;;AACA,QAAI,CAACD,MAAM,CAACE,SAAZ,EAAuB;AACnBF,MAAAA,MAAM,CAACE,SAAP,GAAmB3B,OAAO,CAAC4B,SAAR,CAAkBC,WAArC;AACH;;AACD,QAAI,KAAKtB,eAAT,EAA0B;AACtB,OAACmB,EAAE,GAAG,KAAKI,OAAX,MAAwB,IAAxB,IAAgCJ,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACK,MAAH,EAAzD;AACH;;AACD,SAAKxB,eAAL,GAAuBA,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyDA,eAAzD,GAA2E,KAAlG;AACA,SAAKuB,OAAL,GAAeL,MAAf;AACA,SAAKtB,IAAL,CAAUC,MAAV,GAAmBqB,MAAM,CAACO,YAA1B;AACA,SAAK7B,IAAL,CAAUE,KAAV,GAAkBoB,MAAM,CAACQ,WAAzB;AACA,SAAK3B,OAAL,GAAe,KAAKwB,OAAL,CAAaI,UAAb,CAAwB,IAAxB,CAAf;AACA,SAAKhC,SAAL,CAAeiC,MAAf,CAAsB1B,IAAtB;AACA,SAAK2B,cAAL;AACH,GAfD;;AAgBArC,EAAAA,MAAM,CAACS,SAAP,CAAiB6B,OAAjB,GAA2B,YAAY;AACnC,QAAIX,EAAJ;;AACA,QAAI,KAAKnB,eAAT,EAA0B;AACtB,OAACmB,EAAE,GAAG,KAAKI,OAAX,MAAwB,IAAxB,IAAgCJ,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACK,MAAH,EAAzD;AACH;;AACD,QAAI,KAAKzB,OAAT,EAAkB;AACdN,MAAAA,OAAO,CAACsC,WAAR,CAAoBC,KAApB,CAA0B,KAAKjC,OAA/B,EAAwC,KAAKH,IAA7C;AACH;AACJ,GARD;;AASAJ,EAAAA,MAAM,CAACS,SAAP,CAAiBE,MAAjB,GAA0B,YAAY;AAClC,QAAI,KAAKoB,OAAT,EAAkB;AACd,WAAKA,OAAL,CAAazB,KAAb,GAAqB,KAAKF,IAAL,CAAUE,KAA/B;AACA,WAAKyB,OAAL,CAAa1B,MAAb,GAAsB,KAAKD,IAAL,CAAUC,MAAhC;AACH;AACJ,GALD;;AAMAL,EAAAA,MAAM,CAACS,SAAP,CAAiBe,KAAjB,GAAyB,YAAY;AACjC,QAAIrB,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;;AACA,QAAI,KAAKL,OAAT,EAAkB;AACd,UAAIK,OAAO,CAACE,cAAR,CAAuB2B,MAAvB,IAAiC7B,OAAO,CAACE,cAAR,CAAuBD,KAAxD,IAAiE,KAAKM,UAA1E,EAAsF;AAClF,aAAKuB,SAAL,CAAezC,OAAO,CAACmB,UAAR,CAAmBuB,eAAnB,CAAmC,KAAKxB,UAAxC,CAAf;AACH,OAFD,MAGK;AACD,aAAKuB,SAAL;AACH;AACJ;AACJ,GAXD;;AAYA1C,EAAAA,MAAM,CAACS,SAAP,CAAiB+B,KAAjB,GAAyB,YAAY;AACjC,QAAIrC,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;AACA,QAAII,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,IAAlB,CAAuBF,KAAnC;;AACA,QAAIJ,OAAO,CAACE,cAAR,CAAuB2B,MAA3B,EAAmC;AAC/B,WAAKjB,KAAL;AACH,KAFD,MAGK,IAAIR,KAAK,CAACyB,MAAN,IAAgBzB,KAAK,CAAC4B,MAAN,GAAe,CAA/B,IAAoC,KAAKtB,cAA7C,EAA6D;AAC9D,WAAKoB,SAAL,CAAezC,OAAO,CAACmB,UAAR,CAAmBuB,eAAnB,CAAmC,KAAKrB,cAAxC,EAAwD,IAAIN,KAAK,CAAC4B,MAAlE,CAAf;AACH,KAFI,MAGA,IAAI,KAAKrC,OAAT,EAAkB;AACnBN,MAAAA,OAAO,CAACsC,WAAR,CAAoBC,KAApB,CAA0B,KAAKjC,OAA/B,EAAwC,KAAKH,IAA7C;AACH;AACJ,GAbD;;AAcAJ,EAAAA,MAAM,CAACS,SAAP,CAAiBoC,aAAjB,GAAiC,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AACpD,QAAIpB,EAAJ,EAAQqB,EAAR;;AACA,WAAO,CAACA,EAAE,GAAG,CAACrB,EAAE,GAAG,KAAKpB,OAAX,MAAwB,IAAxB,IAAgCoB,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACkB,aAAH,CAAiBC,IAAjB,EAAuBC,KAAK,CAACE,CAA7B,EAAgCF,KAAK,CAACG,CAAtC,CAA/D,MAA6G,IAA7G,IAAqHF,EAAE,KAAK,KAAK,CAAjI,GAAqIA,EAArI,GAA0I,KAAjJ;AACH,GAHD;;AAIAhD,EAAAA,MAAM,CAACS,SAAP,CAAiB0C,gBAAjB,GAAoC,UAAUC,EAAV,EAAcC,KAAd,EAAqBC,KAArB,EAA4B;AAC5D,QAAI3B,EAAJ,EAAQqB,EAAR;;AACA,QAAI7C,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;AACA,QAAI2C,EAAE,GAAGF,KAAK,CAACG,WAAf;AACA,QAAIC,EAAE,GAAGH,KAAK,CAACE,WAAf;AACA,QAAIE,eAAe,GAAGN,EAAE,CAACO,gBAAH,CAAoBC,KAApB,CAA0BC,SAAhD;AACA,QAAIC,eAAe,GAAG,CAACnC,EAAE,GAAG+B,eAAe,CAACK,OAAtB,MAAmC,IAAnC,IAA2CpC,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAgE,CAAC0B,KAAK,CAACU,OAAN,GAAgBT,KAAK,CAACS,OAAvB,IAAkC,CAAxH;AACA,QAAIC,IAAI,GAAGZ,EAAE,CAACa,WAAH,EAAX;AACA,QAAIC,IAAI,GAAGX,EAAE,CAACU,WAAH,EAAX;AACA,QAAIE,IAAI,GAAGV,EAAE,CAACQ,WAAH,EAAX;AACA,QAAIG,GAAG,GAAG,KAAK7D,OAAf;;AACA,QAAI,CAAC6D,GAAL,EAAU;AACN;AACH;;AACD,QAAIC,aAAa,GAAGpE,OAAO,CAACmB,UAAR,CAAmBC,UAAnB,CAA8BqC,eAAe,CAAC3C,KAA9C,CAApB;;AACA,QAAI,CAACsD,aAAL,EAAoB;AAChB,UAAIC,YAAY,GAAGlB,EAAE,CAACO,gBAAH,CAAoBC,KAAvC;AACA,UAAIW,SAAS,GAAGD,YAAY,CAACE,EAAb,KAAoBC,SAApB,GACVtE,SAAS,CAACc,SAAV,CAAoByD,WAApB,CAAgCJ,YAAY,CAACE,EAA7C,CADU,GAEVrE,SAAS,CAACc,SAAV,CAAoB0D,UAF1B;;AAGA,UAAIJ,SAAS,KAAKtE,OAAO,CAAC4B,SAAR,CAAkB+C,gBAApC,EAAsD;AAClDP,QAAAA,aAAa,GAAGpE,OAAO,CAACmB,UAAR,CAAmByD,iBAAnB,EAAhB;AACH,OAFD,MAGK,IAAIN,SAAS,KAAK,KAAlB,EAAyB;AAC1B,YAAIO,WAAW,GAAG1B,EAAE,CAAC2B,QAAH,EAAlB;AACA,YAAIC,SAAS,GAAGzB,EAAE,CAACwB,QAAH,EAAhB;;AACA,YAAID,WAAW,IAAIE,SAAnB,EAA8B;AAC1BX,UAAAA,aAAa,GAAGpE,OAAO,CAACmB,UAAR,CAAmB6D,GAAnB,CAAuBH,WAAvB,EAAoCE,SAApC,EAA+C5B,EAAE,CAAChD,IAAH,CAAQL,KAAvD,EAA8DwD,EAAE,CAACnD,IAAH,CAAQL,KAAtE,CAAhB;AACH,SAFD,MAGK;AACD,cAAImF,QAAQ,GAAGJ,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiDA,WAAjD,GAA+DE,SAA9E;;AACA,cAAI,CAACE,QAAL,EAAe;AACX;AACH;;AACDb,UAAAA,aAAa,GAAGpE,OAAO,CAACmB,UAAR,CAAmB+D,QAAnB,CAA4BD,QAA5B,CAAhB;AACH;AACJ,OAbI,MAcA;AACDb,QAAAA,aAAa,GAAGE,SAAhB;AACH;AACJ;;AACD,QAAIjE,KAAK,GAAG,CAAC0C,EAAE,GAAGI,EAAE,CAACgC,UAAT,MAAyB,IAAzB,IAAiCpC,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsD7C,SAAS,CAACiC,MAAV,CAAiBgD,UAAnF;AACAnF,IAAAA,OAAO,CAACsC,WAAR,CAAoBY,gBAApB,CAAqCiB,GAArC,EAA0C9D,KAA1C,EAAiD0D,IAAjD,EAAuDE,IAAvD,EAA6DC,IAA7D,EAAmEvD,OAAO,CAACE,cAAR,CAAuB2B,MAA1F,EAAkG4B,aAAlG,EAAiHP,eAAjH;AACH,GA5CD;;AA6CA9D,EAAAA,MAAM,CAACS,SAAP,CAAiB4E,YAAjB,GAAgC,UAAUjC,EAAV,EAAckC,IAAd,EAAoB;AAChD,QAAI3D,EAAJ;;AACA,QAAIxB,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;AACA,QAAI2C,EAAE,GAAG+B,IAAI,CAAC9B,WAAd;AACA,QAAIO,OAAO,GAAGuB,IAAI,CAACvB,OAAnB;AACA,QAAIC,IAAI,GAAGZ,EAAE,CAACa,WAAH,EAAX;AACA,QAAIC,IAAI,GAAGX,EAAE,CAACU,WAAH,EAAX;AACA,QAAIG,GAAG,GAAG,KAAK7D,OAAf;;AACA,QAAI,CAAC6D,GAAL,EAAU;AACN;AACH;;AACD,QAAImB,SAAJ;AACA,QAAIC,OAAO,GAAGpC,EAAE,CAACO,gBAAH,CAAoB6B,OAApB,CAA4BC,KAA1C;;AACA,QAAID,OAAO,CAAC/C,MAAZ,EAAoB;AAChB,UAAIiD,WAAW,GAAGF,OAAO,CAACG,SAA1B;AACA,UAAIC,UAAU,GAAG3F,OAAO,CAACmB,UAAR,CAAmBC,UAAnB,CAA8BmE,OAAO,CAACzE,KAAtC,CAAjB;AACA,UAAI8E,SAAS,GAAGC,IAAI,CAACC,MAAL,KAAgBL,WAAhC;;AACA,UAAIG,SAAS,IAAID,UAAU,KAAKnB,SAAhC,EAA2C;AACvCc,QAAAA,SAAS,GAAGK,UAAZ;AACA7B,QAAAA,OAAO,GAAGyB,OAAO,CAACzB,OAAlB;AACH;AACJ;;AACD,QAAI,CAACwB,SAAL,EAAgB;AACZ,UAAIjB,YAAY,GAAGlB,EAAE,CAACO,gBAAH,CAAoBC,KAAvC;AACA,UAAIW,SAAS,GAAGD,YAAY,CAACE,EAAb,KAAoBC,SAApB,GACVtE,SAAS,CAACc,SAAV,CAAoByD,WAApB,CAAgCJ,YAAY,CAACE,EAA7C,CADU,GAEVrE,SAAS,CAACc,SAAV,CAAoB0D,UAF1B;;AAGA,UAAIJ,SAAS,KAAKtE,OAAO,CAAC4B,SAAR,CAAkB+C,gBAApC,EAAsD;AAClDW,QAAAA,SAAS,GAAGtF,OAAO,CAACmB,UAAR,CAAmByD,iBAAnB,EAAZ;AACH,OAFD,MAGK,IAAIN,SAAS,KAAK,KAAlB,EAAyB;AAC1B,YAAIO,WAAW,GAAG1B,EAAE,CAAC2B,QAAH,EAAlB;AACA,YAAIC,SAAS,GAAGzB,EAAE,CAACwB,QAAH,EAAhB;;AACA,YAAID,WAAW,IAAIE,SAAnB,EAA8B;AAC1BO,UAAAA,SAAS,GAAGtF,OAAO,CAACmB,UAAR,CAAmB6D,GAAnB,CAAuBH,WAAvB,EAAoCE,SAApC,EAA+C5B,EAAE,CAAChD,IAAH,CAAQL,KAAvD,EAA8DwD,EAAE,CAACnD,IAAH,CAAQL,KAAtE,CAAZ;AACH,SAFD,MAGK;AACD,cAAImF,QAAQ,GAAGJ,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiDA,WAAjD,GAA+DE,SAA9E;;AACA,cAAI,CAACE,QAAL,EAAe;AACX;AACH;;AACDK,UAAAA,SAAS,GAAGtF,OAAO,CAACmB,UAAR,CAAmB+D,QAAnB,CAA4BD,QAA5B,CAAZ;AACH;AACJ,OAbI,MAcA;AACDK,QAAAA,SAAS,GAAGhB,SAAZ;AACH;AACJ;;AACD,QAAIjE,KAAK,GAAG,CAACqB,EAAE,GAAGyB,EAAE,CAACgC,UAAT,MAAyB,IAAzB,IAAiCzD,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsDxB,SAAS,CAACiC,MAAV,CAAiBgD,UAAnF;AACAnF,IAAAA,OAAO,CAACsC,WAAR,CAAoB8C,YAApB,CAAiCjB,GAAjC,EAAsC9D,KAAtC,EAA6C0D,IAA7C,EAAmDE,IAAnD,EAAyDd,EAAE,CAACO,gBAAH,CAAoBC,KAApB,CAA0BoC,QAAnF,EAA6F7F,SAAS,CAACuB,MAAV,CAAiBtB,IAA9G,EAAoHgD,EAAE,CAACO,gBAAH,CAAoBC,KAApB,CAA0BqC,IAA9I,EAAoJrF,OAAO,CAACE,cAAR,CAAuB2B,MAA3K,EAAmL8C,SAAnL,EAA8LxB,OAA9L,EAAuMX,EAAE,CAACO,gBAAH,CAAoBC,KAApB,CAA0BsC,MAAjO;AACH,GAnDD;;AAoDAlG,EAAAA,MAAM,CAACS,SAAP,CAAiB0F,eAAjB,GAAmC,UAAU/C,EAAV,EAAcG,EAAd,EAAkB;AACjD,QAAI5B,EAAJ;;AACA,QAAIyE,SAAS,GAAG,KAAKA,SAAL,CAAehD,EAAf,EAAmBG,EAAnB,CAAhB;;AACA,QAAI,CAAC6C,SAAL,EAAgB;AACZ;AACH;;AACD,QAAIhC,GAAG,GAAG,KAAK7D,OAAf;;AACA,QAAI,CAAC6D,GAAL,EAAU;AACN;AACH;;AACD,QAAIJ,IAAI,GAAGZ,EAAE,CAACa,WAAH,EAAX;AACA,QAAIC,IAAI,GAAGX,EAAE,CAACU,WAAH,EAAX;AACAhE,IAAAA,OAAO,CAACsC,WAAR,CAAoB4D,eAApB,CAAoC/B,GAApC,EAAyC,CAACzC,EAAE,GAAGyB,EAAE,CAACgC,UAAT,MAAyB,IAAzB,IAAiCzD,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsD,KAAKxB,SAAL,CAAeiC,MAAf,CAAsBgD,UAArH,EAAiIgB,SAAjI,EAA4IpC,IAA5I,EAAkJE,IAAlJ;AACH,GAbD;;AAcAlE,EAAAA,MAAM,CAACS,SAAP,CAAiB4F,YAAjB,GAAgC,UAAUC,QAAV,EAAoBC,SAApB,EAA+BxC,OAA/B,EAAwCyC,QAAxC,EAAkD;AAC9E,QAAI7E,EAAJ;;AACA,QAAIxB,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIiE,GAAG,GAAGjE,SAAS,CAACuB,MAAV,CAAiBnB,OAA3B;;AACA,QAAI,CAAC6D,GAAL,EAAU;AACN;AACH;;AACD,QAAIqC,QAAQ,GAAGH,QAAQ,CAACrC,WAAT,EAAf;AACAhE,IAAAA,OAAO,CAACsC,WAAR,CAAoB8D,YAApB,CAAiCjC,GAAjC,EAAsC,CAACzC,EAAE,GAAG2E,QAAQ,CAAClB,UAAf,MAA+B,IAA/B,IAAuCzD,EAAE,KAAK,KAAK,CAAnD,GAAuDA,EAAvD,GAA4DxB,SAAS,CAACiC,MAAV,CAAiBgD,UAAnH,EAA+HqB,QAA/H,EAAyID,QAAzI,EAAmJD,SAAnJ,EAA8JxC,OAA9J;AACH,GATD;;AAUA/D,EAAAA,MAAM,CAACS,SAAP,CAAiBiG,YAAjB,GAAgC,UAAUJ,QAAV,EAAoBK,KAApB,EAA2B;AACvD,QAAIhF,EAAJ,EAAQqB,EAAR;;AACA,QAAI4D,MAAM,GAAGN,QAAQ,CAACvB,QAAT,EAAb;;AACA,QAAI6B,MAAM,KAAKnC,SAAf,EAA0B;AACtB;AACH;;AACD,QAAItE,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;AACA,QAAI4E,OAAO,GAAGc,QAAQ,CAAC3C,gBAAT,CAA0B6B,OAA1B,CAAkCvE,SAAhD;AACA,QAAIyE,WAAW,GAAGF,OAAO,CAACG,SAA1B;AACA,QAAIC,UAAU,GAAG3F,OAAO,CAACmB,UAAR,CAAmBC,UAAnB,CAA8BmE,OAAO,CAACzE,KAAtC,CAAjB;AACA,QAAI8E,SAAS,GAAGL,OAAO,CAAC/C,MAAR,IAAkBqD,IAAI,CAACC,MAAL,KAAgBL,WAAlD;AACA,QAAImB,MAAM,GAAG,CAAClF,EAAE,GAAG2E,QAAQ,CAACQ,MAAT,CAAgBD,MAAtB,MAAkC,IAAlC,IAA0ClF,EAAE,KAAK,KAAK,CAAtD,GAA0DA,EAA1D,GAA+D2E,QAAQ,CAAClG,IAAT,CAAcL,KAA1F;AACA,QAAIgE,OAAO,GAAG8B,SAAS,GAAGL,OAAO,CAACzB,OAAX,GAAqB,CAACf,EAAE,GAAGsD,QAAQ,CAACQ,MAAT,CAAgB/C,OAAtB,MAAmC,IAAnC,IAA2Cf,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAgEsD,QAAQ,CAACvC,OAAT,CAAiBhE,KAA7H;AACA,QAAIgH,cAAc,GAAGT,QAAQ,CAACS,cAA9B;AACA,QAAIC,SAAS,GAAGpG,OAAO,CAACoG,SAAxB;AACA,QAAIC,eAAe,GAAGD,SAAS,CAACE,MAAhC;AACA,QAAIC,cAAc,GAAGJ,cAAc,KAAKtC,SAAnB,GAA+BwC,eAAe,CAACF,cAAD,CAAf,CAAgChG,KAA/D,GAAuE0D,SAA5F;AACA,QAAI2C,YAAY,GAAGnH,OAAO,CAACmB,UAAR,CAAmBC,UAAnB,CAA8B8F,cAA9B,CAAnB;AACA,QAAIpG,KAAK,GAAG8E,SAAS,IAAID,UAAU,KAAKnB,SAA5B,GAAwCmB,UAAxC,GAAqDwB,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmDA,YAAnD,GAAkEnH,OAAO,CAACmB,UAAR,CAAmB+D,QAAnB,CAA4ByB,MAA5B,CAAnI;AACA,QAAIS,UAAU,GAAGtG,KAAK,KAAK0D,SAAV,GAAsBxE,OAAO,CAACmB,UAAR,CAAmBuB,eAAnB,CAAmC5B,KAAnC,EAA0CgD,OAA1C,CAAtB,GAA2EU,SAA5F;;AACA,QAAI,CAAC,KAAKlE,OAAN,IAAiB,CAAC8G,UAAtB,EAAkC;AAC9B;AACH;;AACD,QAAIf,QAAQ,CAAC1C,KAAT,CAAehB,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,WAAKrC,OAAL,CAAa+G,IAAb;;AACA,UAAIC,OAAO,GAAG,UAAUjC,IAAV,EAAgB;AAC1B,YAAIgB,QAAQ,CAAC3C,gBAAT,CAA0BC,KAA1B,CAAgCC,SAAhC,CAA0CpB,MAA9C,EAAsD;AAClD,cAAI+E,OAAO,GAAGlB,QAAQ,CAAC1C,KAAT,CAAe6D,GAAf,CAAmB,UAAUC,CAAV,EAAa;AAAE,mBAAOA,CAAC,CAAClE,WAAT;AAAuB,WAAzD,CAAd;AACA,cAAImE,QAAQ,GAAGrC,IAAI,CAAC9B,WAAL,CAAiBI,KAAjB,CAAuBgE,MAAvB,CAA8B,UAAUC,CAAV,EAAa;AAAE,mBAAOL,OAAO,CAACM,OAAR,CAAgBD,CAAC,CAACrE,WAAlB,KAAkC,CAAzC;AAA6C,WAA1F,CAAf;;AACA,cAAImE,QAAQ,CAAC/E,MAAb,EAAqB;AACjB,iBAAK,IAAImF,EAAE,GAAG,CAAT,EAAYC,UAAU,GAAGL,QAA9B,EAAwCI,EAAE,GAAGC,UAAU,CAACpF,MAAxD,EAAgEmF,EAAE,EAAlE,EAAsE;AAClE,kBAAIE,OAAO,GAAGD,UAAU,CAACD,EAAD,CAAxB;AACAG,cAAAA,MAAM,CAAC/E,gBAAP,CAAwBmD,QAAxB,EAAkChB,IAAlC,EAAwC2C,OAAxC;AACH;AACJ;AACJ;;AACDC,QAAAA,MAAM,CAAC7C,YAAP,CAAoBiB,QAApB,EAA8BhB,IAA9B;AACH,OAZD;;AAaA,UAAI4C,MAAM,GAAG,IAAb;;AACA,WAAK,IAAIH,EAAE,GAAG,CAAT,EAAYI,EAAE,GAAG7B,QAAQ,CAAC1C,KAA/B,EAAsCmE,EAAE,GAAGI,EAAE,CAACvF,MAA9C,EAAsDmF,EAAE,EAAxD,EAA4D;AACxD,YAAIzC,IAAI,GAAG6C,EAAE,CAACJ,EAAD,CAAb;;AACAR,QAAAA,OAAO,CAACjC,IAAD,CAAP;AACH;;AACD,WAAK/E,OAAL,CAAa6H,OAAb;AACH;;AACDnI,IAAAA,OAAO,CAACsC,WAAR,CAAoBmE,YAApB,CAAiC,KAAKvG,SAAtC,EAAiD,KAAKI,OAAtD,EAA+D+F,QAA/D,EAAyEK,KAAzE,EAAgFU,UAAhF,EAA4FzG,OAAO,CAACE,cAAR,CAAuB2B,MAAnH,EAA2HoE,MAA3H,EAAmI9C,OAAnI,EAA4IuC,QAAQ,CAAC3C,gBAAT,CAA0BuC,MAAtK;AACH,GA/CD;;AAgDAlG,EAAAA,MAAM,CAACS,SAAP,CAAiB4H,UAAjB,GAA8B,UAAUC,MAAV,EAAkB3B,KAAlB,EAAyB;AACnD,QAAI,CAAC,KAAKpG,OAAV,EAAmB;AACf;AACH;;AACDN,IAAAA,OAAO,CAACsC,WAAR,CAAoB8F,UAApB,CAA+B,KAAK9H,OAApC,EAA6C+H,MAA7C,EAAqD3B,KAArD;AACH,GALD;;AAMA3G,EAAAA,MAAM,CAACS,SAAP,CAAiBiC,SAAjB,GAA6B,UAAU6F,SAAV,EAAqB;AAC9C,QAAI,KAAKhI,OAAT,EAAkB;AACdN,MAAAA,OAAO,CAACsC,WAAR,CAAoBG,SAApB,CAA8B,KAAKnC,OAAnC,EAA4C,KAAKH,IAAjD,EAAuDmI,SAAvD;AACH;AACJ,GAJD;;AAKAvI,EAAAA,MAAM,CAACS,SAAP,CAAiB2F,SAAjB,GAA6B,UAAUhD,EAAV,EAAcG,EAAd,EAAkB;AAC3C,QAAIpD,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;AACA,QAAI4H,cAAc,GAAG5H,OAAO,CAAC6H,aAAR,CAAsBC,KAAtB,CAA4BC,OAAjD;;AACA,QAAI,KAAKpI,OAAT,EAAkB;AACd,aAAON,OAAO,CAACsC,WAAR,CAAoBqG,QAApB,CAA6B,KAAKrI,OAAlC,EAA2C6C,EAA3C,EAA+CG,EAA/C,EAAmDiF,cAAc,CAAC5E,KAAf,CAAqBG,OAAxE,CAAP;AACH;AACJ,GAPD;;AAQA/D,EAAAA,MAAM,CAACS,SAAP,CAAiB4B,cAAjB,GAAkC,YAAY;AAC1C,QAAIlC,SAAS,GAAG,KAAKA,SAArB;AACA,QAAIS,OAAO,GAAGT,SAAS,CAACS,OAAxB;AACA,QAAIiI,UAAU,GAAGjI,OAAO,CAACiI,UAAzB;AACA,QAAI9G,OAAO,GAAG,KAAKA,OAAnB;;AACA,QAAI,CAACA,OAAL,EAAc;AACV;AACH;;AACD,QAAI+G,YAAY,GAAG/G,OAAO,CAACgH,KAA3B;;AACA,QAAIF,UAAU,CAAC9H,KAAf,EAAsB;AAClB,UAAIA,KAAK,GAAGd,OAAO,CAACmB,UAAR,CAAmBC,UAAnB,CAA8BwH,UAAU,CAAC9H,KAAzC,CAAZ;;AACA,UAAIA,KAAJ,EAAW;AACP+H,QAAAA,YAAY,CAACE,eAAb,GAA+B/I,OAAO,CAACmB,UAAR,CAAmBuB,eAAnB,CAAmC5B,KAAnC,EAA0C8H,UAAU,CAAC9E,OAArD,CAA/B;AACH;AACJ;;AACD,QAAI8E,UAAU,CAACI,KAAf,EAAsB;AAClBH,MAAAA,YAAY,CAACI,eAAb,GAA+BL,UAAU,CAACI,KAA1C;AACH;;AACD,QAAIJ,UAAU,CAACM,QAAf,EAAyB;AACrBL,MAAAA,YAAY,CAACM,kBAAb,GAAkCP,UAAU,CAACM,QAA7C;AACH;;AACD,QAAIN,UAAU,CAACQ,MAAf,EAAuB;AACnBP,MAAAA,YAAY,CAACQ,gBAAb,GAAgCT,UAAU,CAACQ,MAA3C;AACH;;AACD,QAAIR,UAAU,CAACzI,IAAf,EAAqB;AACjB0I,MAAAA,YAAY,CAACS,cAAb,GAA8BV,UAAU,CAACzI,IAAzC;AACH;AACJ,GA3BD;;AA4BA,SAAOJ,MAAP;AACH,CA3Sa,EAAd;;AA4SAF,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Canvas = void 0;\nvar Utils_1 = require(\"../Utils\");\nvar Canvas = (function () {\n    function Canvas(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this.context = null;\n        this.generatedCanvas = false;\n    }\n    Canvas.prototype.init = function () {\n        this.resize();\n        var container = this.container;\n        var options = container.options;\n        var cover = options.backgroundMask.cover;\n        var color = cover.color;\n        var trail = options.particles.move.trail;\n        this.coverColor = Utils_1.ColorUtils.colorToRgb(color);\n        this.trailFillColor = Utils_1.ColorUtils.colorToRgb(trail.fillColor);\n        this.paint();\n    };\n    Canvas.prototype.loadCanvas = function (canvas, generatedCanvas) {\n        var _a;\n        if (!canvas.className) {\n            canvas.className = Utils_1.Constants.canvasClass;\n        }\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas = generatedCanvas !== null && generatedCanvas !== void 0 ? generatedCanvas : false;\n        this.element = canvas;\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this.context = this.element.getContext(\"2d\");\n        this.container.retina.init();\n        this.initBackground();\n    };\n    Canvas.prototype.destroy = function () {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.resize = function () {\n        if (this.element) {\n            this.element.width = this.size.width;\n            this.element.height = this.size.height;\n        }\n    };\n    Canvas.prototype.paint = function () {\n        var container = this.container;\n        var options = container.options;\n        if (this.context) {\n            if (options.backgroundMask.enable && options.backgroundMask.cover && this.coverColor) {\n                this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.coverColor));\n            }\n            else {\n                this.paintBase();\n            }\n        }\n    };\n    Canvas.prototype.clear = function () {\n        var container = this.container;\n        var options = container.options;\n        var trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(Utils_1.ColorUtils.getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else if (this.context) {\n            Utils_1.CanvasUtils.clear(this.context, this.size);\n        }\n    };\n    Canvas.prototype.isPointInPath = function (path, point) {\n        var _a, _b;\n        return (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.isPointInPath(path, point.x, point.y)) !== null && _b !== void 0 ? _b : false;\n    };\n    Canvas.prototype.drawLinkTriangle = function (p1, link1, link2) {\n        var _a, _b;\n        var container = this.container;\n        var options = container.options;\n        var p2 = link1.destination;\n        var p3 = link2.destination;\n        var triangleOptions = p1.particlesOptions.links.triangles;\n        var opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        var pos3 = p3.getPosition();\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var colorTriangle = Utils_1.ColorUtils.colorToRgb(triangleOptions.color);\n        if (!colorTriangle) {\n            var linksOptions = p1.particlesOptions.links;\n            var linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors[linksOptions.id]\n                : container.particles.linksColor;\n            if (linkColor === Utils_1.Constants.randomColorValue) {\n                colorTriangle = Utils_1.ColorUtils.getRandomRgbColor();\n            }\n            else if (linkColor === \"mid\") {\n                var sourceColor = p1.getColor();\n                var destColor = p2.getColor();\n                if (sourceColor && destColor) {\n                    colorTriangle = Utils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n                }\n                else {\n                    var hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                    if (!hslColor) {\n                        return;\n                    }\n                    colorTriangle = Utils_1.ColorUtils.hslToRgb(hslColor);\n                }\n            }\n            else {\n                colorTriangle = linkColor;\n            }\n        }\n        var width = (_b = p1.linksWidth) !== null && _b !== void 0 ? _b : container.retina.linksWidth;\n        Utils_1.CanvasUtils.drawLinkTriangle(ctx, width, pos1, pos2, pos3, options.backgroundMask.enable, colorTriangle, opacityTriangle);\n    };\n    Canvas.prototype.drawLinkLine = function (p1, link) {\n        var _a;\n        var container = this.container;\n        var options = container.options;\n        var p2 = link.destination;\n        var opacity = link.opacity;\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var colorLine;\n        var twinkle = p1.particlesOptions.twinkle.lines;\n        if (twinkle.enable) {\n            var twinkleFreq = twinkle.frequency;\n            var twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n            var twinkling = Math.random() < twinkleFreq;\n            if (twinkling && twinkleRgb !== undefined) {\n                colorLine = twinkleRgb;\n                opacity = twinkle.opacity;\n            }\n        }\n        if (!colorLine) {\n            var linksOptions = p1.particlesOptions.links;\n            var linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors[linksOptions.id]\n                : container.particles.linksColor;\n            if (linkColor === Utils_1.Constants.randomColorValue) {\n                colorLine = Utils_1.ColorUtils.getRandomRgbColor();\n            }\n            else if (linkColor === \"mid\") {\n                var sourceColor = p1.getColor();\n                var destColor = p2.getColor();\n                if (sourceColor && destColor) {\n                    colorLine = Utils_1.ColorUtils.mix(sourceColor, destColor, p1.size.value, p2.size.value);\n                }\n                else {\n                    var hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                    if (!hslColor) {\n                        return;\n                    }\n                    colorLine = Utils_1.ColorUtils.hslToRgb(hslColor);\n                }\n            }\n            else {\n                colorLine = linkColor;\n            }\n        }\n        var width = (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth;\n        Utils_1.CanvasUtils.drawLinkLine(ctx, width, pos1, pos2, p1.particlesOptions.links.distance, container.canvas.size, p1.particlesOptions.links.warp, options.backgroundMask.enable, colorLine, opacity, p1.particlesOptions.links.shadow);\n    };\n    Canvas.prototype.drawConnectLine = function (p1, p2) {\n        var _a;\n        var lineStyle = this.lineStyle(p1, p2);\n        if (!lineStyle) {\n            return;\n        }\n        var ctx = this.context;\n        if (!ctx) {\n            return;\n        }\n        var pos1 = p1.getPosition();\n        var pos2 = p2.getPosition();\n        Utils_1.CanvasUtils.drawConnectLine(ctx, (_a = p1.linksWidth) !== null && _a !== void 0 ? _a : this.container.retina.linksWidth, lineStyle, pos1, pos2);\n    };\n    Canvas.prototype.drawGrabLine = function (particle, lineColor, opacity, mousePos) {\n        var _a;\n        var container = this.container;\n        var ctx = container.canvas.context;\n        if (!ctx) {\n            return;\n        }\n        var beginPos = particle.getPosition();\n        Utils_1.CanvasUtils.drawGrabLine(ctx, (_a = particle.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, beginPos, mousePos, lineColor, opacity);\n    };\n    Canvas.prototype.drawParticle = function (particle, delta) {\n        var _a, _b;\n        var pColor = particle.getColor();\n        if (pColor === undefined) {\n            return;\n        }\n        var container = this.container;\n        var options = container.options;\n        var twinkle = particle.particlesOptions.twinkle.particles;\n        var twinkleFreq = twinkle.frequency;\n        var twinkleRgb = Utils_1.ColorUtils.colorToRgb(twinkle.color);\n        var twinkling = twinkle.enable && Math.random() < twinkleFreq;\n        var radius = (_a = particle.bubble.radius) !== null && _a !== void 0 ? _a : particle.size.value;\n        var opacity = twinkling ? twinkle.opacity : (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : particle.opacity.value;\n        var infectionStage = particle.infectionStage;\n        var infection = options.infection;\n        var infectionStages = infection.stages;\n        var infectionColor = infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;\n        var infectionRgb = Utils_1.ColorUtils.colorToRgb(infectionColor);\n        var color = twinkling && twinkleRgb !== undefined ? twinkleRgb : infectionRgb !== null && infectionRgb !== void 0 ? infectionRgb : Utils_1.ColorUtils.hslToRgb(pColor);\n        var colorValue = color !== undefined ? Utils_1.ColorUtils.getStyleFromRgb(color, opacity) : undefined;\n        if (!this.context || !colorValue) {\n            return;\n        }\n        if (particle.links.length > 0) {\n            this.context.save();\n            var _loop_1 = function (link) {\n                if (particle.particlesOptions.links.triangles.enable) {\n                    var links_1 = particle.links.map(function (l) { return l.destination; });\n                    var vertices = link.destination.links.filter(function (t) { return links_1.indexOf(t.destination) >= 0; });\n                    if (vertices.length) {\n                        for (var _i = 0, vertices_1 = vertices; _i < vertices_1.length; _i++) {\n                            var vertice = vertices_1[_i];\n                            this_1.drawLinkTriangle(particle, link, vertice);\n                        }\n                    }\n                }\n                this_1.drawLinkLine(particle, link);\n            };\n            var this_1 = this;\n            for (var _i = 0, _c = particle.links; _i < _c.length; _i++) {\n                var link = _c[_i];\n                _loop_1(link);\n            }\n            this.context.restore();\n        }\n        Utils_1.CanvasUtils.drawParticle(this.container, this.context, particle, delta, colorValue, options.backgroundMask.enable, radius, opacity, particle.particlesOptions.shadow);\n    };\n    Canvas.prototype.drawPlugin = function (plugin, delta) {\n        if (!this.context) {\n            return;\n        }\n        Utils_1.CanvasUtils.drawPlugin(this.context, plugin, delta);\n    };\n    Canvas.prototype.paintBase = function (baseColor) {\n        if (this.context) {\n            Utils_1.CanvasUtils.paintBase(this.context, this.size, baseColor);\n        }\n    };\n    Canvas.prototype.lineStyle = function (p1, p2) {\n        var container = this.container;\n        var options = container.options;\n        var connectOptions = options.interactivity.modes.connect;\n        if (this.context) {\n            return Utils_1.CanvasUtils.gradient(this.context, p1, p2, connectOptions.links.opacity);\n        }\n    };\n    Canvas.prototype.initBackground = function () {\n        var container = this.container;\n        var options = container.options;\n        var background = options.background;\n        var element = this.element;\n        if (!element) {\n            return;\n        }\n        var elementStyle = element.style;\n        if (background.color) {\n            var color = Utils_1.ColorUtils.colorToRgb(background.color);\n            if (color) {\n                elementStyle.backgroundColor = Utils_1.ColorUtils.getStyleFromRgb(color, background.opacity);\n            }\n        }\n        if (background.image) {\n            elementStyle.backgroundImage = background.image;\n        }\n        if (background.position) {\n            elementStyle.backgroundPosition = background.position;\n        }\n        if (background.repeat) {\n            elementStyle.backgroundRepeat = background.repeat;\n        }\n        if (background.size) {\n            elementStyle.backgroundSize = background.size;\n        }\n    };\n    return Canvas;\n}());\nexports.Canvas = Canvas;\n"]},"metadata":{},"sourceType":"script"}