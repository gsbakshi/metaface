{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CanvasUtils = void 0;\n\nvar ColorUtils_1 = require(\"./ColorUtils\");\n\nvar Utils_1 = require(\"./Utils\");\n\nvar CanvasUtils = function () {\n  function CanvasUtils() {}\n\n  CanvasUtils.paintBase = function (context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n  };\n\n  CanvasUtils.clear = function (context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n  };\n\n  CanvasUtils.drawLinkLine = function (context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, colorLine, opacity, shadow) {\n    var drawn = false;\n\n    if (Utils_1.Utils.getDistance(begin, end) <= maxDistance) {\n      this.drawLine(context, begin, end);\n      drawn = true;\n    } else if (warp) {\n      var pi1 = void 0;\n      var pi2 = void 0;\n      var endNE = {\n        x: end.x - canvasSize.width,\n        y: end.y\n      };\n\n      var _a = Utils_1.Utils.getDistances(begin, endNE),\n          dx = _a.dx,\n          dy = _a.dy,\n          distance = _a.distance;\n\n      if (distance <= maxDistance) {\n        var yi = begin.y - dy / dx * begin.x;\n        pi1 = {\n          x: 0,\n          y: yi\n        };\n        pi2 = {\n          x: canvasSize.width,\n          y: yi\n        };\n      } else {\n        var endSW = {\n          x: end.x,\n          y: end.y - canvasSize.height\n        };\n\n        var _b = Utils_1.Utils.getDistances(begin, endSW),\n            dx_1 = _b.dx,\n            dy_1 = _b.dy,\n            distance_1 = _b.distance;\n\n        if (distance_1 <= maxDistance) {\n          var yi = begin.y - dy_1 / dx_1 * begin.x;\n          var xi = -yi / (dy_1 / dx_1);\n          pi1 = {\n            x: xi,\n            y: 0\n          };\n          pi2 = {\n            x: xi,\n            y: canvasSize.height\n          };\n        } else {\n          var endSE = {\n            x: end.x - canvasSize.width,\n            y: end.y - canvasSize.height\n          };\n\n          var _c = Utils_1.Utils.getDistances(begin, endSE),\n              dx_2 = _c.dx,\n              dy_2 = _c.dy,\n              distance_2 = _c.distance;\n\n          if (distance_2 <= maxDistance) {\n            var yi = begin.y - dy_2 / dx_2 * begin.x;\n            var xi = -yi / (dy_2 / dx_2);\n            pi1 = {\n              x: xi,\n              y: yi\n            };\n            pi2 = {\n              x: pi1.x + canvasSize.width,\n              y: pi1.y + canvasSize.height\n            };\n          }\n        }\n      }\n\n      if (pi1 && pi2) {\n        this.drawLine(context, begin, pi1);\n        this.drawLine(context, end, pi2);\n        drawn = true;\n      }\n    }\n\n    if (!drawn) {\n      return;\n    }\n\n    context.lineWidth = width;\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = \"destination-out\";\n    }\n\n    context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n\n    if (shadow.enable) {\n      var shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n\n      if (shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n      }\n    }\n\n    context.stroke();\n  };\n\n  CanvasUtils.drawLinkTriangle = function (context, width, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle) {\n    this.drawTriangle(context, pos1, pos2, pos3);\n    context.lineWidth = width;\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = \"destination-out\";\n    }\n\n    context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n  };\n\n  CanvasUtils.drawConnectLine = function (context, width, lineStyle, begin, end) {\n    context.save();\n    this.drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n    context.restore();\n  };\n\n  CanvasUtils.gradient = function (context, p1, p2, opacity) {\n    var gradStop = Math.floor(p2.size.value / p1.size.value);\n    var color1 = p1.getColor();\n    var color2 = p2.getColor();\n\n    if (!color1 || !color2) {\n      return;\n    }\n\n    var sourcePos = p1.getPosition();\n    var destPos = p2.getPosition();\n    var midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.size.value, p2.size.value);\n    var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\n    return grad;\n  };\n\n  CanvasUtils.drawGrabLine = function (context, width, begin, end, colorLine, opacity) {\n    context.save();\n    this.drawLine(context, begin, end);\n    context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n    context.restore();\n  };\n\n  CanvasUtils.drawParticle = function (container, context, particle, delta, colorValue, backgroundMask, radius, opacity, shadow) {\n    var pos = particle.getPosition();\n    context.save();\n    context.translate(pos.x, pos.y);\n    context.beginPath();\n\n    if (particle.angle !== 0) {\n      context.rotate(particle.angle * Math.PI / 180);\n    }\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = \"destination-out\";\n    }\n\n    var shadowColor = particle.shadowColor;\n\n    if (shadow.enable && shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n      context.shadowOffsetX = shadow.offset.x;\n      context.shadowOffsetY = shadow.offset.y;\n    }\n\n    context.fillStyle = colorValue;\n    var stroke = particle.stroke;\n    context.lineWidth = stroke.width;\n\n    if (particle.strokeColor) {\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(particle.strokeColor, particle.stroke.opacity);\n    }\n\n    if (particle.close) {\n      context.closePath();\n    }\n\n    this.drawShape(container, context, particle, radius, opacity, delta);\n\n    if (stroke.width > 0 && particle.strokeColor) {\n      context.stroke();\n    }\n\n    if (particle.fill) {\n      context.fill();\n    }\n\n    context.restore();\n    context.save();\n    context.translate(pos.x, pos.y);\n\n    if (particle.angle !== 0) {\n      context.rotate(particle.angle * Math.PI / 180);\n    }\n\n    if (backgroundMask) {\n      context.globalCompositeOperation = \"destination-out\";\n    }\n\n    this.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n  };\n\n  CanvasUtils.drawShape = function (container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n      return;\n    }\n\n    var drawer = container.drawers[particle.shape];\n\n    if (!drawer) {\n      return;\n    }\n\n    drawer.draw(context, particle, radius, opacity, delta);\n  };\n\n  CanvasUtils.drawShapeAfterEffect = function (container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n      return;\n    }\n\n    var drawer = container.drawers[particle.shape];\n\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n      return;\n    }\n\n    drawer.afterEffect(context, particle, radius, opacity, delta);\n  };\n\n  CanvasUtils.drawPlugin = function (context, plugin, delta) {\n    if (plugin.draw !== undefined) {\n      context.save();\n      plugin.draw(context, delta);\n      context.restore();\n    }\n  };\n\n  CanvasUtils.drawLine = function (context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n  };\n\n  CanvasUtils.drawTriangle = function (context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n  };\n\n  return CanvasUtils;\n}();\n\nexports.CanvasUtils = CanvasUtils;","map":{"version":3,"sources":["/Volumes/AltDisk/Work/Learning/Udemy/Web Dev Course - Udemy/React/smartbrain/node_modules/tsparticles/dist/Utils/CanvasUtils.js"],"names":["Object","defineProperty","exports","value","CanvasUtils","ColorUtils_1","require","Utils_1","paintBase","context","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clear","clearRect","drawLinkLine","begin","end","maxDistance","canvasSize","warp","backgroundMask","colorLine","opacity","shadow","drawn","Utils","getDistance","drawLine","pi1","pi2","endNE","x","y","_a","getDistances","dx","dy","distance","yi","endSW","_b","dx_1","dy_1","distance_1","xi","endSE","_c","dx_2","dy_2","distance_2","lineWidth","globalCompositeOperation","strokeStyle","ColorUtils","getStyleFromRgb","enable","shadowColor","colorToRgb","color","shadowBlur","blur","stroke","drawLinkTriangle","pos1","pos2","pos3","colorTriangle","opacityTriangle","drawTriangle","fill","drawConnectLine","lineStyle","gradient","p1","p2","gradStop","Math","floor","size","color1","getColor","color2","sourcePos","getPosition","destPos","midRgb","mix","grad","createLinearGradient","addColorStop","getStyleFromHsl","drawGrabLine","drawParticle","container","particle","delta","colorValue","radius","pos","translate","beginPath","angle","rotate","PI","shadowOffsetX","offset","shadowOffsetY","strokeColor","close","closePath","drawShape","drawShapeAfterEffect","shape","drawer","drawers","draw","afterEffect","drawPlugin","plugin","undefined","moveTo","lineTo","p3"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CanvasUtils = void 0;\nvar ColorUtils_1 = require(\"./ColorUtils\");\nvar Utils_1 = require(\"./Utils\");\nvar CanvasUtils = (function () {\n    function CanvasUtils() {\n    }\n    CanvasUtils.paintBase = function (context, dimension, baseColor) {\n        context.save();\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n        context.fillRect(0, 0, dimension.width, dimension.height);\n        context.restore();\n    };\n    CanvasUtils.clear = function (context, dimension) {\n        context.clearRect(0, 0, dimension.width, dimension.height);\n    };\n    CanvasUtils.drawLinkLine = function (context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, colorLine, opacity, shadow) {\n        var drawn = false;\n        if (Utils_1.Utils.getDistance(begin, end) <= maxDistance) {\n            this.drawLine(context, begin, end);\n            drawn = true;\n        }\n        else if (warp) {\n            var pi1 = void 0;\n            var pi2 = void 0;\n            var endNE = {\n                x: end.x - canvasSize.width,\n                y: end.y,\n            };\n            var _a = Utils_1.Utils.getDistances(begin, endNE), dx = _a.dx, dy = _a.dy, distance = _a.distance;\n            if (distance <= maxDistance) {\n                var yi = begin.y - (dy / dx) * begin.x;\n                pi1 = { x: 0, y: yi };\n                pi2 = { x: canvasSize.width, y: yi };\n            }\n            else {\n                var endSW = {\n                    x: end.x,\n                    y: end.y - canvasSize.height,\n                };\n                var _b = Utils_1.Utils.getDistances(begin, endSW), dx_1 = _b.dx, dy_1 = _b.dy, distance_1 = _b.distance;\n                if (distance_1 <= maxDistance) {\n                    var yi = begin.y - (dy_1 / dx_1) * begin.x;\n                    var xi = -yi / (dy_1 / dx_1);\n                    pi1 = { x: xi, y: 0 };\n                    pi2 = { x: xi, y: canvasSize.height };\n                }\n                else {\n                    var endSE = {\n                        x: end.x - canvasSize.width,\n                        y: end.y - canvasSize.height,\n                    };\n                    var _c = Utils_1.Utils.getDistances(begin, endSE), dx_2 = _c.dx, dy_2 = _c.dy, distance_2 = _c.distance;\n                    if (distance_2 <= maxDistance) {\n                        var yi = begin.y - (dy_2 / dx_2) * begin.x;\n                        var xi = -yi / (dy_2 / dx_2);\n                        pi1 = { x: xi, y: yi };\n                        pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                    }\n                }\n            }\n            if (pi1 && pi2) {\n                this.drawLine(context, begin, pi1);\n                this.drawLine(context, end, pi2);\n                drawn = true;\n            }\n        }\n        if (!drawn) {\n            return;\n        }\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        if (shadow.enable) {\n            var shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n            if (shadowColor) {\n                context.shadowBlur = shadow.blur;\n                context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            }\n        }\n        context.stroke();\n    };\n    CanvasUtils.drawLinkTriangle = function (context, width, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle) {\n        this.drawTriangle(context, pos1, pos2, pos3);\n        context.lineWidth = width;\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\n        context.fill();\n    };\n    CanvasUtils.drawConnectLine = function (context, width, lineStyle, begin, end) {\n        context.save();\n        this.drawLine(context, begin, end);\n        context.lineWidth = width;\n        context.strokeStyle = lineStyle;\n        context.stroke();\n        context.restore();\n    };\n    CanvasUtils.gradient = function (context, p1, p2, opacity) {\n        var gradStop = Math.floor(p2.size.value / p1.size.value);\n        var color1 = p1.getColor();\n        var color2 = p2.getColor();\n        if (!color1 || !color2) {\n            return;\n        }\n        var sourcePos = p1.getPosition();\n        var destPos = p2.getPosition();\n        var midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.size.value, p2.size.value);\n        var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\n        return grad;\n    };\n    CanvasUtils.drawGrabLine = function (context, width, begin, end, colorLine, opacity) {\n        context.save();\n        this.drawLine(context, begin, end);\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n        context.lineWidth = width;\n        context.stroke();\n        context.restore();\n    };\n    CanvasUtils.drawParticle = function (container, context, particle, delta, colorValue, backgroundMask, radius, opacity, shadow) {\n        var pos = particle.getPosition();\n        context.save();\n        context.translate(pos.x, pos.y);\n        context.beginPath();\n        if (particle.angle !== 0) {\n            context.rotate((particle.angle * Math.PI) / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        var shadowColor = particle.shadowColor;\n        if (shadow.enable && shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n            context.shadowOffsetX = shadow.offset.x;\n            context.shadowOffsetY = shadow.offset.y;\n        }\n        context.fillStyle = colorValue;\n        var stroke = particle.stroke;\n        context.lineWidth = stroke.width;\n        if (particle.strokeColor) {\n            context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(particle.strokeColor, particle.stroke.opacity);\n        }\n        if (particle.close) {\n            context.closePath();\n        }\n        this.drawShape(container, context, particle, radius, opacity, delta);\n        if (stroke.width > 0 && particle.strokeColor) {\n            context.stroke();\n        }\n        if (particle.fill) {\n            context.fill();\n        }\n        context.restore();\n        context.save();\n        context.translate(pos.x, pos.y);\n        if (particle.angle !== 0) {\n            context.rotate((particle.angle * Math.PI) / 180);\n        }\n        if (backgroundMask) {\n            context.globalCompositeOperation = \"destination-out\";\n        }\n        this.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n        context.restore();\n    };\n    CanvasUtils.drawShape = function (container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        var drawer = container.drawers[particle.shape];\n        if (!drawer) {\n            return;\n        }\n        drawer.draw(context, particle, radius, opacity, delta);\n    };\n    CanvasUtils.drawShapeAfterEffect = function (container, context, particle, radius, opacity, delta) {\n        if (!particle.shape) {\n            return;\n        }\n        var drawer = container.drawers[particle.shape];\n        if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n            return;\n        }\n        drawer.afterEffect(context, particle, radius, opacity, delta);\n    };\n    CanvasUtils.drawPlugin = function (context, plugin, delta) {\n        if (plugin.draw !== undefined) {\n            context.save();\n            plugin.draw(context, delta);\n            context.restore();\n        }\n    };\n    CanvasUtils.drawLine = function (context, begin, end) {\n        context.beginPath();\n        context.moveTo(begin.x, begin.y);\n        context.lineTo(end.x, end.y);\n        context.closePath();\n    };\n    CanvasUtils.drawTriangle = function (context, p1, p2, p3) {\n        context.beginPath();\n        context.moveTo(p1.x, p1.y);\n        context.lineTo(p2.x, p2.y);\n        context.lineTo(p3.x, p3.y);\n        context.closePath();\n    };\n    return CanvasUtils;\n}());\nexports.CanvasUtils = CanvasUtils;\n"]},"metadata":{},"sourceType":"script"}