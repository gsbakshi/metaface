{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Linker = void 0;\n\nvar Utils_1 = require(\"../../../../Utils\");\n\nvar Linker = function () {\n  function Linker() {}\n\n  Linker.link = function (p1, container, _delta) {\n    var _a;\n\n    var linkOpt1 = p1.particlesOptions.links;\n    var optOpacity = linkOpt1.opacity;\n    var optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n    var canvasSize = container.canvas.size;\n    var warp = linkOpt1.warp;\n    var pos1 = p1.getPosition();\n    var range = warp ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n    var query = container.particles.quadTree.query(range);\n\n    for (var _i = 0, query_1 = query; _i < query_1.length; _i++) {\n      var p2 = query_1[_i];\n      var linkOpt2 = p2.particlesOptions.links;\n\n      if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id) {\n        continue;\n      }\n\n      var pos2 = p2.getPosition();\n      var distance = Utils_1.Utils.getDistance(pos1, pos2);\n\n      if (warp) {\n        if (distance > optDistance) {\n          var pos2NE = {\n            x: pos2.x - canvasSize.width,\n            y: pos2.y\n          };\n          distance = Utils_1.Utils.getDistance(pos1, pos2NE);\n\n          if (distance > optDistance) {\n            var pos2SE = {\n              x: pos2.x - canvasSize.width,\n              y: pos2.y - canvasSize.height\n            };\n            distance = Utils_1.Utils.getDistance(pos1, pos2SE);\n\n            if (distance > optDistance) {\n              var pos2SW = {\n                x: pos2.x,\n                y: pos2.y - canvasSize.height\n              };\n              distance = Utils_1.Utils.getDistance(pos1, pos2SW);\n            }\n          }\n        }\n      }\n\n      if (distance > optDistance) {\n        return;\n      }\n\n      var opacityLine = optOpacity - distance * optOpacity / optDistance;\n\n      if (opacityLine > 0) {\n        var linksOptions = p1.particlesOptions.links;\n        var linkColor = linksOptions.id !== undefined ? container.particles.linksColors[linksOptions.id] : container.particles.linksColor;\n\n        if (!linkColor) {\n          var optColor = linksOptions.color;\n          var color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n          if (color === Utils_1.Constants.randomColorValue) {\n            if (linksOptions.consent) {\n              linkColor = Utils_1.ColorUtils.colorToRgb({\n                value: color\n              });\n            } else if (linksOptions.blink) {\n              linkColor = Utils_1.Constants.randomColorValue;\n            } else {\n              linkColor = Utils_1.Constants.midColorValue;\n            }\n          } else {\n            linkColor = Utils_1.ColorUtils.colorToRgb({\n              value: color\n            });\n          }\n\n          if (linksOptions.id !== undefined) {\n            container.particles.linksColors[linksOptions.id] = linkColor;\n          } else {\n            container.particles.linksColor = linkColor;\n          }\n        }\n\n        if (p2.links.map(function (t) {\n          return t.destination;\n        }).indexOf(p1) === -1 && p1.links.map(function (t) {\n          return t.destination;\n        }).indexOf(p2) === -1) {\n          p1.links.push({\n            destination: p2,\n            opacity: opacityLine\n          });\n        }\n      }\n    }\n  };\n\n  return Linker;\n}();\n\nexports.Linker = Linker;","map":{"version":3,"sources":["/Users/guru/Desktop/Development/React/smartbrain/node_modules/tsparticles/dist/Core/Particle/Interactions/Particles/Linker.js"],"names":["Object","defineProperty","exports","value","Linker","Utils_1","require","link","p1","container","_delta","_a","linkOpt1","particlesOptions","links","optOpacity","opacity","optDistance","linksDistance","retina","canvasSize","canvas","size","warp","pos1","getPosition","range","CircleWarp","x","y","Circle","query","particles","quadTree","_i","query_1","length","p2","linkOpt2","enable","id","pos2","distance","Utils","getDistance","pos2NE","width","pos2SE","height","pos2SW","opacityLine","linksOptions","linkColor","undefined","linksColors","linksColor","optColor","color","Constants","randomColorValue","consent","ColorUtils","colorToRgb","blink","midColorValue","map","t","destination","indexOf","push"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Linker = void 0;\nvar Utils_1 = require(\"../../../../Utils\");\nvar Linker = (function () {\n    function Linker() {\n    }\n    Linker.link = function (p1, container, _delta) {\n        var _a;\n        var linkOpt1 = p1.particlesOptions.links;\n        var optOpacity = linkOpt1.opacity;\n        var optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        var canvasSize = container.canvas.size;\n        var warp = linkOpt1.warp;\n        var pos1 = p1.getPosition();\n        var range = warp\n            ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n        var query = container.particles.quadTree.query(range);\n        for (var _i = 0, query_1 = query; _i < query_1.length; _i++) {\n            var p2 = query_1[_i];\n            var linkOpt2 = p2.particlesOptions.links;\n            if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id) {\n                continue;\n            }\n            var pos2 = p2.getPosition();\n            var distance = Utils_1.Utils.getDistance(pos1, pos2);\n            if (warp) {\n                if (distance > optDistance) {\n                    var pos2NE = {\n                        x: pos2.x - canvasSize.width,\n                        y: pos2.y,\n                    };\n                    distance = Utils_1.Utils.getDistance(pos1, pos2NE);\n                    if (distance > optDistance) {\n                        var pos2SE = {\n                            x: pos2.x - canvasSize.width,\n                            y: pos2.y - canvasSize.height,\n                        };\n                        distance = Utils_1.Utils.getDistance(pos1, pos2SE);\n                        if (distance > optDistance) {\n                            var pos2SW = {\n                                x: pos2.x,\n                                y: pos2.y - canvasSize.height,\n                            };\n                            distance = Utils_1.Utils.getDistance(pos1, pos2SW);\n                        }\n                    }\n                }\n            }\n            if (distance > optDistance) {\n                return;\n            }\n            var opacityLine = optOpacity - (distance * optOpacity) / optDistance;\n            if (opacityLine > 0) {\n                var linksOptions = p1.particlesOptions.links;\n                var linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors[linksOptions.id]\n                    : container.particles.linksColor;\n                if (!linkColor) {\n                    var optColor = linksOptions.color;\n                    var color = typeof optColor === \"string\" ? optColor : optColor.value;\n                    if (color === Utils_1.Constants.randomColorValue) {\n                        if (linksOptions.consent) {\n                            linkColor = Utils_1.ColorUtils.colorToRgb({\n                                value: color,\n                            });\n                        }\n                        else if (linksOptions.blink) {\n                            linkColor = Utils_1.Constants.randomColorValue;\n                        }\n                        else {\n                            linkColor = Utils_1.Constants.midColorValue;\n                        }\n                    }\n                    else {\n                        linkColor = Utils_1.ColorUtils.colorToRgb({\n                            value: color,\n                        });\n                    }\n                    if (linksOptions.id !== undefined) {\n                        container.particles.linksColors[linksOptions.id] = linkColor;\n                    }\n                    else {\n                        container.particles.linksColor = linkColor;\n                    }\n                }\n                if (p2.links.map(function (t) { return t.destination; }).indexOf(p1) === -1 &&\n                    p1.links.map(function (t) { return t.destination; }).indexOf(p2) === -1) {\n                    p1.links.push({\n                        destination: p2,\n                        opacity: opacityLine,\n                    });\n                }\n            }\n        }\n    };\n    return Linker;\n}());\nexports.Linker = Linker;\n"]},"metadata":{},"sourceType":"script"}