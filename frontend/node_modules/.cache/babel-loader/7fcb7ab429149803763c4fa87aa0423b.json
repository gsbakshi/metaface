{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolygonMaskInstance = void 0;\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\n\nvar PolygonMaskInstance = function () {\n  function PolygonMaskInstance(container) {\n    this.container = container;\n    this.dimension = {\n      height: 0,\n      width: 0\n    };\n    this.path2DSupported = Object.prototype.hasOwnProperty.call(window, \"Path2D\");\n    this.options = new PolygonMask_1.PolygonMask();\n    this.polygonMaskMoveRadius = this.options.move.radius * container.retina.pixelRatio;\n  }\n\n  PolygonMaskInstance.polygonBounce = function (particle) {\n    particle.velocity.horizontal = -particle.velocity.horizontal + particle.velocity.vertical / 2;\n    particle.velocity.vertical = -particle.velocity.vertical + particle.velocity.horizontal / 2;\n  };\n\n  PolygonMaskInstance.drawPolygonMask = function (context, rawData, stroke) {\n    var color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n\n    if (color) {\n      context.beginPath();\n      context.moveTo(rawData[0].x, rawData[0].y);\n\n      for (var i = 1; i < rawData.length; i++) {\n        context.lineTo(rawData[i].x, rawData[i].y);\n      }\n\n      context.closePath();\n      context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color);\n      context.lineWidth = stroke.width;\n      context.stroke();\n    }\n  };\n\n  PolygonMaskInstance.drawPolygonMaskPath = function (context, path, stroke, position) {\n    context.translate(position.x, position.y);\n    var color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n\n    if (color) {\n      context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color, stroke.opacity);\n      context.lineWidth = stroke.width;\n      context.stroke(path);\n    }\n  };\n\n  PolygonMaskInstance.prototype.initAsync = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var polygonMaskOptions;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.options.load(options === null || options === void 0 ? void 0 : options.polygon);\n            polygonMaskOptions = this.options;\n            this.polygonMaskMoveRadius = polygonMaskOptions.move.radius * this.container.retina.pixelRatio;\n            if (!polygonMaskOptions.enable) return [3, 2];\n            return [4, this.initRawData()];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2];\n        }\n      });\n    });\n  };\n\n  PolygonMaskInstance.prototype.checkInsidePolygon = function (position) {\n    var container = this.container;\n    var polygonMaskOptions = this.options;\n\n    if (!polygonMaskOptions.enable || polygonMaskOptions.type === Enums_1.Type.none || polygonMaskOptions.type === Enums_1.Type.inline) {\n      return true;\n    }\n\n    if (!this.raw) {\n      throw new Error(Utils_1.Constants.noPolygonFound);\n    }\n\n    var x = position ? position.x : Math.random() * container.canvas.size.width;\n    var y = position ? position.y : Math.random() * container.canvas.size.height;\n    var inside = false;\n\n    for (var i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n      var xi = this.raw[i].x;\n      var yi = this.raw[i].y;\n      var xj = this.raw[j].x;\n      var yj = this.raw[j].y;\n      var intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n\n      if (intersect) {\n        inside = !inside;\n      }\n    }\n\n    if (polygonMaskOptions.type === Enums_1.Type.inside) {\n      return inside;\n    } else if (polygonMaskOptions.type === Enums_1.Type.outside) {\n      return !inside;\n    }\n\n    return false;\n  };\n\n  PolygonMaskInstance.prototype.resize = function () {\n    var _this = this;\n\n    var container = this.container;\n    var polygonMaskOptions = this.options;\n\n    if (polygonMaskOptions.enable && polygonMaskOptions.type !== Enums_1.Type.none) {\n      if (this.redrawTimeout) {\n        clearTimeout(this.redrawTimeout);\n      }\n\n      this.redrawTimeout = window.setTimeout(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4, this.initRawData()];\n\n              case 1:\n                _a.sent();\n\n                container.particles.redraw();\n                return [2];\n            }\n          });\n        });\n      }, 250);\n    }\n  };\n\n  PolygonMaskInstance.prototype.stop = function () {\n    delete this.raw;\n    delete this.paths;\n  };\n\n  PolygonMaskInstance.prototype.randomPointInPolygon = function () {\n    var container = this.container;\n    var polygonMaskOptions = this.options;\n    var position;\n\n    if (polygonMaskOptions.type === Enums_1.Type.inline) {\n      switch (polygonMaskOptions.inline.arrangement) {\n        case Enums_1.InlineArrangement.randomPoint:\n          position = this.getRandomPointOnPolygonPath();\n          break;\n\n        case Enums_1.InlineArrangement.randomLength:\n          position = this.getRandomPointOnPolygonPathByLength();\n          break;\n\n        case Enums_1.InlineArrangement.equidistant:\n          position = this.getEquidistantPointOnPolygonPathByIndex(container.particles.count);\n          break;\n\n        case Enums_1.InlineArrangement.onePerPoint:\n        case Enums_1.InlineArrangement.perPoint:\n        default:\n          position = this.getPointOnPolygonPathByIndex(container.particles.count);\n      }\n    } else {\n      position = {\n        x: Math.random() * container.canvas.size.width,\n        y: Math.random() * container.canvas.size.height\n      };\n    }\n\n    if (this.checkInsidePolygon(position)) {\n      return position;\n    } else {\n      return this.randomPointInPolygon();\n    }\n  };\n\n  PolygonMaskInstance.prototype.particlesInitialization = function () {\n    var polygonMaskOptions = this.options;\n\n    if (polygonMaskOptions.enable && polygonMaskOptions.type === Enums_1.Type.inline && (polygonMaskOptions.inline.arrangement === Enums_1.InlineArrangement.onePerPoint || polygonMaskOptions.inline.arrangement === Enums_1.InlineArrangement.perPoint)) {\n      this.drawPointsOnPolygonPath();\n      return true;\n    }\n\n    return false;\n  };\n\n  PolygonMaskInstance.prototype.particlePosition = function (position, particle) {\n    var _a, _b;\n\n    var polygonMaskOptions = this.options;\n\n    if (polygonMaskOptions.enable && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n      var pos = {\n        x: 0,\n        y: 0\n      };\n\n      if (position) {\n        pos.x = position.x;\n        pos.y = position.y;\n      } else {\n        var randomPoint = this.randomPointInPolygon();\n        pos.x = randomPoint.x;\n        pos.y = randomPoint.y;\n      }\n\n      if (polygonMaskOptions.type === Enums_1.Type.inline && particle) {\n        particle.initialPosition = {\n          x: pos.x,\n          y: pos.y\n        };\n      }\n\n      return pos;\n    }\n  };\n\n  PolygonMaskInstance.prototype.particleBounce = function (particle, _delta) {\n    var polygonMaskOptions = this.options;\n\n    if (polygonMaskOptions.enable && polygonMaskOptions.type !== Enums_1.Type.none && polygonMaskOptions.type !== Enums_1.Type.inline) {\n      if (!this.checkInsidePolygon(particle.getPosition())) {\n        PolygonMaskInstance.polygonBounce(particle);\n        return true;\n      }\n    } else if (polygonMaskOptions.enable && polygonMaskOptions.type === Enums_1.Type.inline) {\n      if (particle.initialPosition) {\n        var dist = Utils_1.Utils.getDistance(particle.initialPosition, particle.getPosition());\n\n        if (dist > this.polygonMaskMoveRadius) {\n          PolygonMaskInstance.polygonBounce(particle);\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  PolygonMaskInstance.prototype.clickPositionValid = function (position) {\n    var polygonMaskOptions = this.options;\n\n    if (polygonMaskOptions.enable && polygonMaskOptions.type !== Enums_1.Type.none && polygonMaskOptions.type !== Enums_1.Type.inline) {\n      if (this.checkInsidePolygon(position)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  PolygonMaskInstance.prototype.downloadSvgPathToPolygon = function (svgUrl, force) {\n    return __awaiter(this, void 0, void 0, function () {\n      var polygonMaskOptions, url, forceDownload, req, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            polygonMaskOptions = this.options;\n            url = svgUrl || polygonMaskOptions.url;\n            forceDownload = force !== null && force !== void 0 ? force : false;\n\n            if (!url || this.paths !== undefined && !forceDownload) {\n              return [2, this.raw];\n            }\n\n            return [4, fetch(url)];\n\n          case 1:\n            req = _b.sent();\n            if (!req.ok) return [3, 3];\n            _a = this.parseSvgPathToPolygon;\n            return [4, req.text()];\n\n          case 2:\n            return [2, _a.apply(this, [_b.sent()])];\n\n          case 3:\n            throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n        }\n      });\n    });\n  };\n\n  PolygonMaskInstance.prototype.parseSvgPathToPolygon = function (xml, force) {\n    var _a;\n\n    var forceDownload = force !== null && force !== void 0 ? force : false;\n\n    if (this.paths !== undefined && !forceDownload) {\n      return this.raw;\n    }\n\n    var container = this.container;\n    var polygonMaskOptions = this.options;\n    var parser = new DOMParser();\n    var doc = parser.parseFromString(xml, \"image/svg+xml\");\n    var svg = doc.getElementsByTagName(\"svg\")[0];\n    var svgPaths = svg.getElementsByTagName(\"path\");\n\n    if (!svgPaths.length) {\n      svgPaths = doc.getElementsByTagName(\"path\");\n    }\n\n    this.paths = [];\n\n    for (var i = 0; i < svgPaths.length; i++) {\n      var path = svgPaths.item(i);\n\n      if (path) {\n        this.paths.push({\n          element: path,\n          length: path.getTotalLength()\n        });\n      }\n    }\n\n    var pxRatio = container.retina.pixelRatio;\n    var scale = polygonMaskOptions.scale / pxRatio;\n    this.dimension.width = parseFloat(svg.getAttribute(\"width\") || \"0\") * scale;\n    this.dimension.height = parseFloat(svg.getAttribute(\"height\") || \"0\") * scale;\n    var position = (_a = polygonMaskOptions.position) !== null && _a !== void 0 ? _a : {\n      x: 50,\n      y: 50\n    };\n    this.offset = {\n      x: container.canvas.size.width * position.x / (100 * pxRatio) - this.dimension.width / 2,\n      y: container.canvas.size.height * position.y / (100 * pxRatio) - this.dimension.height / 2\n    };\n    var polygonRaw = [];\n\n    for (var _i = 0, _b = this.paths; _i < _b.length; _i++) {\n      var path = _b[_i];\n      var segments = path.element.pathSegList;\n      var len = segments.numberOfItems;\n      var p = {\n        x: 0,\n        y: 0\n      };\n\n      for (var i = 0; i < len; i++) {\n        var segment = segments.getItem(i);\n\n        switch (segment.pathSegType) {\n          case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n          case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n          case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n          case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n          case window.SVGPathSeg.PATHSEG_ARC_ABS:\n          case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n          case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n            {\n              var absSeg = segment;\n              p.x = absSeg.x;\n              p.y = absSeg.y;\n              break;\n            }\n\n          case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n            p.x = segment.x;\n            break;\n\n          case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n            p.y = segment.y;\n            break;\n\n          case window.SVGPathSeg.PATHSEG_LINETO_REL:\n          case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n          case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n          case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n          case window.SVGPathSeg.PATHSEG_ARC_REL:\n          case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n          case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n            {\n              var relSeg = segment;\n              p.x += relSeg.x;\n              p.y += relSeg.y;\n              break;\n            }\n\n          case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n            p.x += segment.x;\n            break;\n\n          case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n            p.y += segment.y;\n            break;\n\n          case window.SVGPathSeg.PATHSEG_UNKNOWN:\n          case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n            continue;\n        }\n\n        polygonRaw.push({\n          x: p.x * scale + this.offset.x,\n          y: p.y * scale + this.offset.y\n        });\n      }\n    }\n\n    return polygonRaw;\n  };\n\n  PolygonMaskInstance.prototype.draw = function (context) {\n    var _a;\n\n    if (!((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n      return;\n    }\n\n    var polygonMaskOptions = this.options;\n\n    if (polygonMaskOptions.enable && polygonMaskOptions.draw.enable) {\n      var polygonDraw = polygonMaskOptions.draw;\n      var rawData = this.raw;\n\n      for (var _i = 0, _b = this.paths; _i < _b.length; _i++) {\n        var path = _b[_i];\n        var path2d = path.path2d;\n        var path2dSupported = this.path2DSupported;\n\n        if (context) {\n          if (path2dSupported && path2d && this.offset) {\n            PolygonMaskInstance.drawPolygonMaskPath(context, path2d, polygonDraw.stroke, this.offset);\n          } else if (rawData) {\n            PolygonMaskInstance.drawPolygonMask(context, rawData, polygonDraw.stroke);\n          }\n        }\n      }\n    }\n  };\n\n  PolygonMaskInstance.prototype.drawPointsOnPolygonPath = function () {\n    var container = this.container;\n\n    if (this.raw) {\n      for (var _i = 0, _a = this.raw; _i < _a.length; _i++) {\n        var item = _a[_i];\n        container.particles.addParticle({\n          x: item.x,\n          y: item.y\n        });\n      }\n    }\n  };\n\n  PolygonMaskInstance.prototype.getRandomPointOnPolygonPath = function () {\n    if (!this.raw || !this.raw.length) throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n    var coords = Utils_1.Utils.itemFromArray(this.raw);\n    return {\n      x: coords.x,\n      y: coords.y\n    };\n  };\n\n  PolygonMaskInstance.prototype.getRandomPointOnPolygonPathByLength = function () {\n    var _a, _b, _c;\n\n    var polygonMaskOptions = this.options;\n    if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n    var path = Utils_1.Utils.itemFromArray(this.paths);\n    var distance = Math.floor(Math.random() * path.length) + 1;\n    var point = path.element.getPointAtLength(distance);\n    return {\n      x: point.x * polygonMaskOptions.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) || 0),\n      y: point.y * polygonMaskOptions.scale + (((_c = this.offset) === null || _c === void 0 ? void 0 : _c.y) || 0)\n    };\n  };\n\n  PolygonMaskInstance.prototype.getEquidistantPointOnPolygonPathByIndex = function (index) {\n    var _a, _b, _c, _d, _e, _f, _g;\n\n    var container = this.container;\n    var options = container.options;\n    var polygonMaskOptions = this.options;\n    if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n    var offset = 0;\n    var point;\n    var totalLength = this.paths.reduce(function (tot, path) {\n      return tot + path.length;\n    }, 0);\n    var distance = totalLength / options.particles.number.value;\n\n    for (var _i = 0, _h = this.paths; _i < _h.length; _i++) {\n      var path = _h[_i];\n      var pathDistance = distance * index - offset;\n\n      if (pathDistance <= path.length) {\n        point = path.element.getPointAtLength(pathDistance);\n        break;\n      } else {\n        offset += path.length;\n      }\n    }\n\n    return {\n      x: ((_b = point === null || point === void 0 ? void 0 : point.x) !== null && _b !== void 0 ? _b : 0) * polygonMaskOptions.scale + ((_d = (_c = this.offset) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : 0),\n      y: ((_e = point === null || point === void 0 ? void 0 : point.y) !== null && _e !== void 0 ? _e : 0) * polygonMaskOptions.scale + ((_g = (_f = this.offset) === null || _f === void 0 ? void 0 : _f.y) !== null && _g !== void 0 ? _g : 0)\n    };\n  };\n\n  PolygonMaskInstance.prototype.getPointOnPolygonPathByIndex = function (index) {\n    if (!this.raw || !this.raw.length) throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n    var coords = this.raw[index % this.raw.length];\n    return {\n      x: coords.x,\n      y: coords.y\n    };\n  };\n\n  PolygonMaskInstance.prototype.createPath2D = function () {\n    var _a, _b;\n\n    var polygonMaskOptions = this.options;\n\n    if (!this.path2DSupported || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n      return;\n    }\n\n    var _loop_1 = function (path) {\n      var pathData = (_b = path.element) === null || _b === void 0 ? void 0 : _b.getAttribute(\"d\");\n\n      if (pathData) {\n        var path2d = new Path2D(pathData);\n        var matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n        var finalPath = new Path2D();\n        var transform = matrix.scale(polygonMaskOptions.scale);\n\n        if (finalPath.addPath) {\n          finalPath.addPath(path2d, transform);\n          path.path2d = finalPath;\n        } else {\n          delete path.path2d;\n        }\n      } else {\n        delete path.path2d;\n      }\n\n      if (!path.path2d && this_1.raw) {\n        path.path2d = new Path2D();\n        path.path2d.moveTo(this_1.raw[0].x, this_1.raw[0].y);\n        this_1.raw.forEach(function (pos, i) {\n          var _a;\n\n          if (i > 0) {\n            (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n          }\n        });\n        path.path2d.closePath();\n      }\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, _c = this.paths; _i < _c.length; _i++) {\n      var path = _c[_i];\n\n      _loop_1(path);\n    }\n  };\n\n  PolygonMaskInstance.prototype.initRawData = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var polygonMaskOptions, _a, data, svg, path;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            polygonMaskOptions = this.options;\n            if (!polygonMaskOptions.url) return [3, 2];\n            _a = this;\n            return [4, this.downloadSvgPathToPolygon(polygonMaskOptions.url)];\n\n          case 1:\n            _a.raw = _b.sent();\n            return [3, 3];\n\n          case 2:\n            if (polygonMaskOptions.data) {\n              data = polygonMaskOptions.data;\n              svg = void 0;\n\n              if (typeof data !== \"string\") {\n                path = data.path instanceof Array ? data.path.map(function (t) {\n                  return \"<path d=\\\"\" + t + \"\\\" />\";\n                }).join(\"\") : \"<path d=\\\"\" + data.path + \"\\\" />\";\n                svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"\" + data.size.width + \"\\\" height=\\\"\" + data.size.height + \"\\\">\" + path + \"</svg>\";\n              } else {\n                svg = data;\n              }\n\n              this.raw = this.parseSvgPathToPolygon(svg);\n            }\n\n            _b.label = 3;\n\n          case 3:\n            this.createPath2D();\n            return [2];\n        }\n      });\n    });\n  };\n\n  return PolygonMaskInstance;\n}();\n\nexports.PolygonMaskInstance = PolygonMaskInstance;","map":{"version":3,"sources":["/Volumes/AltDisk/Work/Learning/Udemy/Web Dev Course - Udemy/React/smartbrain/node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","PolygonMaskInstance","Enums_1","require","Utils_1","PolygonMask_1","container","dimension","height","width","path2DSupported","prototype","hasOwnProperty","window","options","PolygonMask","polygonMaskMoveRadius","move","radius","retina","pixelRatio","polygonBounce","particle","velocity","horizontal","vertical","drawPolygonMask","context","rawData","stroke","color","ColorUtils","colorToRgb","beginPath","moveTo","x","i","lineTo","closePath","strokeStyle","getStyleFromRgb","lineWidth","drawPolygonMaskPath","path","position","translate","opacity","initAsync","polygonMaskOptions","_a","load","polygon","enable","initRawData","checkInsidePolygon","type","Type","none","inline","raw","Error","Constants","noPolygonFound","Math","random","canvas","size","inside","j","xi","yi","xj","yj","intersect","outside","resize","_this","redrawTimeout","clearTimeout","setTimeout","particles","redraw","stop","paths","randomPointInPolygon","arrangement","InlineArrangement","randomPoint","getRandomPointOnPolygonPath","randomLength","getRandomPointOnPolygonPathByLength","equidistant","getEquidistantPointOnPolygonPathByIndex","count","onePerPoint","perPoint","getPointOnPolygonPathByIndex","particlesInitialization","drawPointsOnPolygonPath","particlePosition","_b","pos","initialPosition","particleBounce","_delta","getPosition","dist","Utils","getDistance","clickPositionValid","downloadSvgPathToPolygon","svgUrl","force","url","forceDownload","req","undefined","fetch","ok","parseSvgPathToPolygon","text","xml","parser","DOMParser","doc","parseFromString","svg","getElementsByTagName","svgPaths","item","element","getTotalLength","pxRatio","scale","parseFloat","getAttribute","offset","polygonRaw","_i","segments","pathSegList","len","numberOfItems","p","segment","getItem","pathSegType","SVGPathSeg","PATHSEG_MOVETO_ABS","PATHSEG_LINETO_ABS","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_ARC_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","absSeg","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_REL","PATHSEG_MOVETO_REL","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","relSeg","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","draw","polygonDraw","path2d","path2dSupported","addParticle","noPolygonDataLoaded","coords","itemFromArray","_c","distance","floor","point","getPointAtLength","index","_d","_e","_f","_g","totalLength","reduce","tot","number","_h","pathDistance","createPath2D","_loop_1","pathData","Path2D","matrix","document","createElementNS","createSVGMatrix","finalPath","transform","addPath","this_1","forEach","data","Array","map","join"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskInstance = void 0;\nvar Enums_1 = require(\"./Enums\");\nvar Utils_1 = require(\"../../Utils\");\nvar PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\nvar PolygonMaskInstance = (function () {\n    function PolygonMaskInstance(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.path2DSupported = Object.prototype.hasOwnProperty.call(window, \"Path2D\");\n        this.options = new PolygonMask_1.PolygonMask();\n        this.polygonMaskMoveRadius = this.options.move.radius * container.retina.pixelRatio;\n    }\n    PolygonMaskInstance.polygonBounce = function (particle) {\n        particle.velocity.horizontal = -particle.velocity.horizontal + particle.velocity.vertical / 2;\n        particle.velocity.vertical = -particle.velocity.vertical + particle.velocity.horizontal / 2;\n    };\n    PolygonMaskInstance.drawPolygonMask = function (context, rawData, stroke) {\n        var color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n        if (color) {\n            context.beginPath();\n            context.moveTo(rawData[0].x, rawData[0].y);\n            for (var i = 1; i < rawData.length; i++) {\n                context.lineTo(rawData[i].x, rawData[i].y);\n            }\n            context.closePath();\n            context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color);\n            context.lineWidth = stroke.width;\n            context.stroke();\n        }\n    };\n    PolygonMaskInstance.drawPolygonMaskPath = function (context, path, stroke, position) {\n        context.translate(position.x, position.y);\n        var color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n        if (color) {\n            context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color, stroke.opacity);\n            context.lineWidth = stroke.width;\n            context.stroke(path);\n        }\n    };\n    PolygonMaskInstance.prototype.initAsync = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var polygonMaskOptions;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.options.load(options === null || options === void 0 ? void 0 : options.polygon);\n                        polygonMaskOptions = this.options;\n                        this.polygonMaskMoveRadius = polygonMaskOptions.move.radius * this.container.retina.pixelRatio;\n                        if (!polygonMaskOptions.enable) return [3, 2];\n                        return [4, this.initRawData()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2];\n                }\n            });\n        });\n    };\n    PolygonMaskInstance.prototype.checkInsidePolygon = function (position) {\n        var container = this.container;\n        var polygonMaskOptions = this.options;\n        if (!polygonMaskOptions.enable ||\n            polygonMaskOptions.type === Enums_1.Type.none ||\n            polygonMaskOptions.type === Enums_1.Type.inline) {\n            return true;\n        }\n        if (!this.raw) {\n            throw new Error(Utils_1.Constants.noPolygonFound);\n        }\n        var x = position ? position.x : Math.random() * container.canvas.size.width;\n        var y = position ? position.y : Math.random() * container.canvas.size.height;\n        var inside = false;\n        for (var i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            var xi = this.raw[i].x;\n            var yi = this.raw[i].y;\n            var xj = this.raw[j].x;\n            var yj = this.raw[j].y;\n            var intersect = yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        if (polygonMaskOptions.type === Enums_1.Type.inside) {\n            return inside;\n        }\n        else if (polygonMaskOptions.type === Enums_1.Type.outside) {\n            return !inside;\n        }\n        return false;\n    };\n    PolygonMaskInstance.prototype.resize = function () {\n        var _this = this;\n        var container = this.container;\n        var polygonMaskOptions = this.options;\n        if (polygonMaskOptions.enable && polygonMaskOptions.type !== Enums_1.Type.none) {\n            if (this.redrawTimeout) {\n                clearTimeout(this.redrawTimeout);\n            }\n            this.redrawTimeout = window.setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4, this.initRawData()];\n                        case 1:\n                            _a.sent();\n                            container.particles.redraw();\n                            return [2];\n                    }\n                });\n            }); }, 250);\n        }\n    };\n    PolygonMaskInstance.prototype.stop = function () {\n        delete this.raw;\n        delete this.paths;\n    };\n    PolygonMaskInstance.prototype.randomPointInPolygon = function () {\n        var container = this.container;\n        var polygonMaskOptions = this.options;\n        var position;\n        if (polygonMaskOptions.type === Enums_1.Type.inline) {\n            switch (polygonMaskOptions.inline.arrangement) {\n                case Enums_1.InlineArrangement.randomPoint:\n                    position = this.getRandomPointOnPolygonPath();\n                    break;\n                case Enums_1.InlineArrangement.randomLength:\n                    position = this.getRandomPointOnPolygonPathByLength();\n                    break;\n                case Enums_1.InlineArrangement.equidistant:\n                    position = this.getEquidistantPointOnPolygonPathByIndex(container.particles.count);\n                    break;\n                case Enums_1.InlineArrangement.onePerPoint:\n                case Enums_1.InlineArrangement.perPoint:\n                default:\n                    position = this.getPointOnPolygonPathByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.size.width,\n                y: Math.random() * container.canvas.size.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPointInPolygon();\n        }\n    };\n    PolygonMaskInstance.prototype.particlesInitialization = function () {\n        var polygonMaskOptions = this.options;\n        if (polygonMaskOptions.enable &&\n            polygonMaskOptions.type === Enums_1.Type.inline &&\n            (polygonMaskOptions.inline.arrangement === Enums_1.InlineArrangement.onePerPoint ||\n                polygonMaskOptions.inline.arrangement === Enums_1.InlineArrangement.perPoint)) {\n            this.drawPointsOnPolygonPath();\n            return true;\n        }\n        return false;\n    };\n    PolygonMaskInstance.prototype.particlePosition = function (position, particle) {\n        var _a, _b;\n        var polygonMaskOptions = this.options;\n        if (polygonMaskOptions.enable && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0) {\n            var pos = { x: 0, y: 0 };\n            if (position) {\n                pos.x = position.x;\n                pos.y = position.y;\n            }\n            else {\n                var randomPoint = this.randomPointInPolygon();\n                pos.x = randomPoint.x;\n                pos.y = randomPoint.y;\n            }\n            if (polygonMaskOptions.type === Enums_1.Type.inline && particle) {\n                particle.initialPosition = {\n                    x: pos.x,\n                    y: pos.y,\n                };\n            }\n            return pos;\n        }\n    };\n    PolygonMaskInstance.prototype.particleBounce = function (particle, _delta) {\n        var polygonMaskOptions = this.options;\n        if (polygonMaskOptions.enable &&\n            polygonMaskOptions.type !== Enums_1.Type.none &&\n            polygonMaskOptions.type !== Enums_1.Type.inline) {\n            if (!this.checkInsidePolygon(particle.getPosition())) {\n                PolygonMaskInstance.polygonBounce(particle);\n                return true;\n            }\n        }\n        else if (polygonMaskOptions.enable && polygonMaskOptions.type === Enums_1.Type.inline) {\n            if (particle.initialPosition) {\n                var dist = Utils_1.Utils.getDistance(particle.initialPosition, particle.getPosition());\n                if (dist > this.polygonMaskMoveRadius) {\n                    PolygonMaskInstance.polygonBounce(particle);\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    PolygonMaskInstance.prototype.clickPositionValid = function (position) {\n        var polygonMaskOptions = this.options;\n        if (polygonMaskOptions.enable &&\n            polygonMaskOptions.type !== Enums_1.Type.none &&\n            polygonMaskOptions.type !== Enums_1.Type.inline) {\n            if (this.checkInsidePolygon(position)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    PolygonMaskInstance.prototype.downloadSvgPathToPolygon = function (svgUrl, force) {\n        return __awaiter(this, void 0, void 0, function () {\n            var polygonMaskOptions, url, forceDownload, req, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        polygonMaskOptions = this.options;\n                        url = svgUrl || polygonMaskOptions.url;\n                        forceDownload = force !== null && force !== void 0 ? force : false;\n                        if (!url || (this.paths !== undefined && !forceDownload)) {\n                            return [2, this.raw];\n                        }\n                        return [4, fetch(url)];\n                    case 1:\n                        req = _b.sent();\n                        if (!req.ok) return [3, 3];\n                        _a = this.parseSvgPathToPolygon;\n                        return [4, req.text()];\n                    case 2: return [2, _a.apply(this, [_b.sent()])];\n                    case 3: throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n                }\n            });\n        });\n    };\n    PolygonMaskInstance.prototype.parseSvgPathToPolygon = function (xml, force) {\n        var _a;\n        var forceDownload = force !== null && force !== void 0 ? force : false;\n        if (this.paths !== undefined && !forceDownload) {\n            return this.raw;\n        }\n        var container = this.container;\n        var polygonMaskOptions = this.options;\n        var parser = new DOMParser();\n        var doc = parser.parseFromString(xml, \"image/svg+xml\");\n        var svg = doc.getElementsByTagName(\"svg\")[0];\n        var svgPaths = svg.getElementsByTagName(\"path\");\n        if (!svgPaths.length) {\n            svgPaths = doc.getElementsByTagName(\"path\");\n        }\n        this.paths = [];\n        for (var i = 0; i < svgPaths.length; i++) {\n            var path = svgPaths.item(i);\n            if (path) {\n                this.paths.push({\n                    element: path,\n                    length: path.getTotalLength(),\n                });\n            }\n        }\n        var pxRatio = container.retina.pixelRatio;\n        var scale = polygonMaskOptions.scale / pxRatio;\n        this.dimension.width = parseFloat(svg.getAttribute(\"width\") || \"0\") * scale;\n        this.dimension.height = parseFloat(svg.getAttribute(\"height\") || \"0\") * scale;\n        var position = (_a = polygonMaskOptions.position) !== null && _a !== void 0 ? _a : {\n            x: 50,\n            y: 50,\n        };\n        this.offset = {\n            x: (container.canvas.size.width * position.x) / (100 * pxRatio) - this.dimension.width / 2,\n            y: (container.canvas.size.height * position.y) / (100 * pxRatio) - this.dimension.height / 2,\n        };\n        var polygonRaw = [];\n        for (var _i = 0, _b = this.paths; _i < _b.length; _i++) {\n            var path = _b[_i];\n            var segments = path.element.pathSegList;\n            var len = segments.numberOfItems;\n            var p = {\n                x: 0,\n                y: 0,\n            };\n            for (var i = 0; i < len; i++) {\n                var segment = segments.getItem(i);\n                switch (segment.pathSegType) {\n                    case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                    case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                    case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                        var absSeg = segment;\n                        p.x = absSeg.x;\n                        p.y = absSeg.y;\n                        break;\n                    }\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                        p.x = segment.x;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                        p.y = segment.y;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                    case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                    case window.SVGPathSeg.PATHSEG_ARC_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                    case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                        var relSeg = segment;\n                        p.x += relSeg.x;\n                        p.y += relSeg.y;\n                        break;\n                    }\n                    case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                        p.x += segment.x;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                        p.y += segment.y;\n                        break;\n                    case window.SVGPathSeg.PATHSEG_UNKNOWN:\n                    case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                        continue;\n                }\n                polygonRaw.push({\n                    x: p.x * scale + this.offset.x,\n                    y: p.y * scale + this.offset.y,\n                });\n            }\n        }\n        return polygonRaw;\n    };\n    PolygonMaskInstance.prototype.draw = function (context) {\n        var _a;\n        if (!((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        var polygonMaskOptions = this.options;\n        if (polygonMaskOptions.enable && polygonMaskOptions.draw.enable) {\n            var polygonDraw = polygonMaskOptions.draw;\n            var rawData = this.raw;\n            for (var _i = 0, _b = this.paths; _i < _b.length; _i++) {\n                var path = _b[_i];\n                var path2d = path.path2d;\n                var path2dSupported = this.path2DSupported;\n                if (context) {\n                    if (path2dSupported && path2d && this.offset) {\n                        PolygonMaskInstance.drawPolygonMaskPath(context, path2d, polygonDraw.stroke, this.offset);\n                    }\n                    else if (rawData) {\n                        PolygonMaskInstance.drawPolygonMask(context, rawData, polygonDraw.stroke);\n                    }\n                }\n            }\n        }\n    };\n    PolygonMaskInstance.prototype.drawPointsOnPolygonPath = function () {\n        var container = this.container;\n        if (this.raw) {\n            for (var _i = 0, _a = this.raw; _i < _a.length; _i++) {\n                var item = _a[_i];\n                container.particles.addParticle({\n                    x: item.x,\n                    y: item.y,\n                });\n            }\n        }\n    };\n    PolygonMaskInstance.prototype.getRandomPointOnPolygonPath = function () {\n        if (!this.raw || !this.raw.length)\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        var coords = Utils_1.Utils.itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    };\n    PolygonMaskInstance.prototype.getRandomPointOnPolygonPathByLength = function () {\n        var _a, _b, _c;\n        var polygonMaskOptions = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length))\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        var path = Utils_1.Utils.itemFromArray(this.paths);\n        var distance = Math.floor(Math.random() * path.length) + 1;\n        var point = path.element.getPointAtLength(distance);\n        return {\n            x: point.x * polygonMaskOptions.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) || 0),\n            y: point.y * polygonMaskOptions.scale + (((_c = this.offset) === null || _c === void 0 ? void 0 : _c.y) || 0),\n        };\n    };\n    PolygonMaskInstance.prototype.getEquidistantPointOnPolygonPathByIndex = function (index) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var container = this.container;\n        var options = container.options;\n        var polygonMaskOptions = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length))\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        var offset = 0;\n        var point;\n        var totalLength = this.paths.reduce(function (tot, path) { return tot + path.length; }, 0);\n        var distance = totalLength / options.particles.number.value;\n        for (var _i = 0, _h = this.paths; _i < _h.length; _i++) {\n            var path = _h[_i];\n            var pathDistance = distance * index - offset;\n            if (pathDistance <= path.length) {\n                point = path.element.getPointAtLength(pathDistance);\n                break;\n            }\n            else {\n                offset += path.length;\n            }\n        }\n        return {\n            x: ((_b = point === null || point === void 0 ? void 0 : point.x) !== null && _b !== void 0 ? _b : 0) * polygonMaskOptions.scale + ((_d = (_c = this.offset) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : 0),\n            y: ((_e = point === null || point === void 0 ? void 0 : point.y) !== null && _e !== void 0 ? _e : 0) * polygonMaskOptions.scale + ((_g = (_f = this.offset) === null || _f === void 0 ? void 0 : _f.y) !== null && _g !== void 0 ? _g : 0),\n        };\n    };\n    PolygonMaskInstance.prototype.getPointOnPolygonPathByIndex = function (index) {\n        if (!this.raw || !this.raw.length)\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        var coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    };\n    PolygonMaskInstance.prototype.createPath2D = function () {\n        var _a, _b;\n        var polygonMaskOptions = this.options;\n        if (!this.path2DSupported || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        var _loop_1 = function (path) {\n            var pathData = (_b = path.element) === null || _b === void 0 ? void 0 : _b.getAttribute(\"d\");\n            if (pathData) {\n                var path2d = new Path2D(pathData);\n                var matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n                var finalPath = new Path2D();\n                var transform = matrix.scale(polygonMaskOptions.scale);\n                if (finalPath.addPath) {\n                    finalPath.addPath(path2d, transform);\n                    path.path2d = finalPath;\n                }\n                else {\n                    delete path.path2d;\n                }\n            }\n            else {\n                delete path.path2d;\n            }\n            if (!path.path2d && this_1.raw) {\n                path.path2d = new Path2D();\n                path.path2d.moveTo(this_1.raw[0].x, this_1.raw[0].y);\n                this_1.raw.forEach(function (pos, i) {\n                    var _a;\n                    if (i > 0) {\n                        (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                    }\n                });\n                path.path2d.closePath();\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, _c = this.paths; _i < _c.length; _i++) {\n            var path = _c[_i];\n            _loop_1(path);\n        }\n    };\n    PolygonMaskInstance.prototype.initRawData = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var polygonMaskOptions, _a, data, svg, path;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        polygonMaskOptions = this.options;\n                        if (!polygonMaskOptions.url) return [3, 2];\n                        _a = this;\n                        return [4, this.downloadSvgPathToPolygon(polygonMaskOptions.url)];\n                    case 1:\n                        _a.raw = _b.sent();\n                        return [3, 3];\n                    case 2:\n                        if (polygonMaskOptions.data) {\n                            data = polygonMaskOptions.data;\n                            svg = void 0;\n                            if (typeof data !== \"string\") {\n                                path = data.path instanceof Array\n                                    ? data.path.map(function (t) { return \"<path d=\\\"\" + t + \"\\\" />\"; }).join(\"\")\n                                    : \"<path d=\\\"\" + data.path + \"\\\" />\";\n                                svg = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"\" + data.size.width + \"\\\" height=\\\"\" + data.size.height + \"\\\">\" + path + \"</svg>\";\n                            }\n                            else {\n                                svg = data;\n                            }\n                            this.raw = this.parseSvgPathToPolygon(svg);\n                        }\n                        _b.label = 3;\n                    case 3:\n                        this.createPath2D();\n                        return [2];\n                }\n            });\n        });\n    };\n    return PolygonMaskInstance;\n}());\nexports.PolygonMaskInstance = PolygonMaskInstance;\n"]},"metadata":{},"sourceType":"script"}