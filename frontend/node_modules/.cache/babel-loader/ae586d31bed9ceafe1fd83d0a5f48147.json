{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar AbsorberInstance = function () {\n  function AbsorberInstance(absorbers, options, position) {\n    var _a, _b;\n\n    this.absorbers = absorbers;\n    this.container = absorbers.container;\n    this.initialPosition = position;\n    this.options = options;\n    var container = this.container;\n    var size = options.size.value * container.retina.pixelRatio;\n    var random = typeof options.size.random === \"boolean\" ? options.size.random : options.size.random.enable;\n    var minSize = typeof options.size.random === \"boolean\" ? 1 : options.size.random.minimumValue;\n\n    if (random) {\n      size = Utils_1.Utils.randomInRange(minSize, size);\n    }\n\n    this.opacity = this.options.opacity;\n    this.size = size * container.retina.pixelRatio;\n    this.mass = this.size * options.size.density;\n    var limit = options.size.limit;\n    this.limit = limit !== undefined ? limit * container.retina.pixelRatio : limit;\n    var color = typeof options.color === \"string\" ? {\n      value: options.color\n    } : options.color;\n    this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n  }\n\n  AbsorberInstance.prototype.attract = function (particle, _delta) {\n    var pos = particle.getPosition();\n\n    var _a = Utils_1.Utils.getDistances(this.position, pos),\n        dx = _a.dx,\n        dy = _a.dy,\n        distance = _a.distance;\n\n    var angle = Math.atan2(dx, dy) * (180 / Math.PI);\n    var acceleration = this.mass / Math.pow(distance, 2);\n\n    if (distance < this.size + particle.size.value) {\n      var sizeFactor = particle.size.value * 0.033;\n\n      if (this.size > particle.size.value && distance < this.size - particle.size.value) {\n        particle.destroyed = true;\n      } else {\n        particle.size.value -= sizeFactor;\n        particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n        particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n      }\n\n      if (this.limit === undefined || this.size < this.limit) {\n        this.size += sizeFactor;\n      }\n\n      this.mass += sizeFactor * this.options.size.density;\n    } else {\n      particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n      particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n    }\n  };\n\n  AbsorberInstance.prototype.resize = function () {\n    var initialPosition = this.initialPosition;\n    this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  };\n\n  AbsorberInstance.prototype.draw = function (context) {\n    context.translate(this.position.x, this.position.y);\n    context.beginPath();\n    context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n    context.fill();\n  };\n\n  AbsorberInstance.prototype.calcPosition = function () {\n    var _a;\n\n    var container = this.container;\n    var percentPosition = (_a = this.options.position) !== null && _a !== void 0 ? _a : {\n      x: Math.random() * 100,\n      y: Math.random() * 100\n    };\n    return {\n      x: percentPosition.x / 100 * container.canvas.size.width,\n      y: percentPosition.y / 100 * container.canvas.size.height\n    };\n  };\n\n  return AbsorberInstance;\n}();\n\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"sources":["/Users/guru/Desktop/Development/React/smartbrain/node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js"],"names":["Object","defineProperty","exports","value","AbsorberInstance","Utils_1","require","absorbers","options","position","_a","_b","container","initialPosition","size","retina","pixelRatio","random","enable","minSize","minimumValue","Utils","randomInRange","opacity","mass","density","limit","undefined","color","ColorUtils","colorToRgb","b","g","r","calcPosition","prototype","attract","particle","_delta","pos","getPosition","getDistances","dx","dy","distance","angle","Math","atan2","PI","acceleration","pow","sizeFactor","destroyed","velocity","horizontal","sin","vertical","cos","resize","isPointInside","canvas","draw","context","translate","x","y","beginPath","arc","closePath","fillStyle","getStyleFromRgb","fill","percentPosition","width","height"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nvar Utils_1 = require(\"../../Utils\");\nvar AbsorberInstance = (function () {\n    function AbsorberInstance(absorbers, options, position) {\n        var _a, _b;\n        this.absorbers = absorbers;\n        this.container = absorbers.container;\n        this.initialPosition = position;\n        this.options = options;\n        var container = this.container;\n        var size = options.size.value * container.retina.pixelRatio;\n        var random = typeof options.size.random === \"boolean\" ? options.size.random : options.size.random.enable;\n        var minSize = typeof options.size.random === \"boolean\" ? 1 : options.size.random.minimumValue;\n        if (random) {\n            size = Utils_1.Utils.randomInRange(minSize, size);\n        }\n        this.opacity = this.options.opacity;\n        this.size = size * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density;\n        var limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio : limit;\n        var color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    }\n    AbsorberInstance.prototype.attract = function (particle, _delta) {\n        var pos = particle.getPosition();\n        var _a = Utils_1.Utils.getDistances(this.position, pos), dx = _a.dx, dy = _a.dy, distance = _a.distance;\n        var angle = Math.atan2(dx, dy) * (180 / Math.PI);\n        var acceleration = this.mass / Math.pow(distance, 2);\n        if (distance < this.size + particle.size.value) {\n            var sizeFactor = particle.size.value * 0.033;\n            if (this.size > particle.size.value && distance < this.size - particle.size.value) {\n                particle.destroyed = true;\n            }\n            else {\n                particle.size.value -= sizeFactor;\n                particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n                particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density;\n        }\n        else {\n            particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n            particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n        }\n    };\n    AbsorberInstance.prototype.resize = function () {\n        var initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    };\n    AbsorberInstance.prototype.draw = function (context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    };\n    AbsorberInstance.prototype.calcPosition = function () {\n        var _a;\n        var container = this.container;\n        var percentPosition = (_a = this.options.position) !== null && _a !== void 0 ? _a : {\n            x: Math.random() * 100,\n            y: Math.random() * 100,\n        };\n        return {\n            x: (percentPosition.x / 100) * container.canvas.size.width,\n            y: (percentPosition.y / 100) * container.canvas.size.height,\n        };\n    };\n    return AbsorberInstance;\n}());\nexports.AbsorberInstance = AbsorberInstance;\n"]},"metadata":{},"sourceType":"script"}